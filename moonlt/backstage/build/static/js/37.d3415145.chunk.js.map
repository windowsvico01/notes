{"version":3,"sources":["containers/Pages/Draft/List/reducer.js","containers/Pages/Draft/List/actions.js"],"names":["__webpack_require__","r","__webpack_exports__","d","initialState","immer__WEBPACK_IMPORTED_MODULE_0__","_actions__WEBPACK_IMPORTED_MODULE_1__","categoryList","plateList","draftList","page","total","addReducer","state","arguments","length","undefined","action","produce","draft","type","LOAD_CATEGORY_SUCCESS","data","category","LOAD_PLATE_SUCCESS","plate","LOAD_DRAFT_SUCCESS","current","LOAD_CATEGORY","LOAD_PLATE","LOAD_DRAFT","loadDraft","loadDraftSuccess","loadCategory","loadCategorySuccess","loadPlate","loadPlateSuccess","params"],"mappings":"8FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,iCAAAE,IAAA,IAAAC,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAEaI,EAAe,CAC1BG,aAAc,GACdC,UAAW,GACXC,UAAW,GACXC,KAAM,EACNC,MAAO,GAsBMC,UAnBI,eAACC,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAASV,EAAca,EAAvBH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OACjBE,YAAQL,EAAO,SAAAM,GACb,OAAQF,EAAOG,MACb,KAAKC,wBACHF,EAAMZ,aAAeU,EAAOK,KAAKC,SACjC,MACF,KAAKC,qBACHL,EAAMX,UAAYS,EAAOK,KAAKG,MAC9B,MACF,KAAKC,qBACHP,EAAMV,UAAYQ,EAAOK,KAAKA,KAC9BH,EAAMT,KAAOO,EAAOK,KAAKK,QACzBR,EAAMR,MAAQM,EAAOK,KAAKX,MAC1B,MACF,QACE,OAAOE,wCCzBfb,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,kCAAA0B,IAAA5B,EAAAG,EAAAD,EAAA,0CAAAmB,IAAArB,EAAAG,EAAAD,EAAA,+BAAA2B,IAAA7B,EAAAG,EAAAD,EAAA,uCAAAsB,IAAAxB,EAAAG,EAAAD,EAAA,+BAAA4B,IAAA9B,EAAAG,EAAAD,EAAA,uCAAAwB,IAAA1B,EAAAG,EAAAD,EAAA,8BAAA6B,IAAA/B,EAAAG,EAAAD,EAAA,qCAAA8B,IAAAhC,EAAAG,EAAAD,EAAA,iCAAA+B,IAAAjC,EAAAG,EAAAD,EAAA,wCAAAgC,IAAAlC,EAAAG,EAAAD,EAAA,8BAAAiC,IAAAnC,EAAAG,EAAAD,EAAA,qCAAAkC,IAAO,IAAMR,EAAgB,4BAChBP,EAAwB,oCAExBQ,EAAa,yBACbL,EAAqB,iCAErBM,EAAa,yBACbJ,EAAqB,iCAE3B,SAASK,EAAUM,GACxB,MAAO,CACLjB,KAAMU,EACNO,UAIG,SAASL,EAAiBV,GAC/B,MAAO,CACLF,KAAMM,EACNJ,QAIG,SAASW,EAAaI,GAC3B,MAAO,CACLjB,KAAMQ,GAIH,SAASM,EAAoBZ,GAClC,MAAO,CACLF,KAAMC,EACNC,QAIG,SAASa,EAAUE,GACxB,MAAO,CACLjB,KAAMS,EACNQ,UAIG,SAASD,EAAiBd,GAC/B,MAAO,CACLF,KAAMI,EACNF","file":"static/js/37.d3415145.chunk.js","sourcesContent":["import produce from 'immer';\nimport { LOAD_CATEGORY_SUCCESS, LOAD_PLATE_SUCCESS, LOAD_DRAFT_SUCCESS } from './actions';\nexport const initialState = {\n  categoryList: [],\n  plateList: [],\n  draftList: [],\n  page: 0,\n  total: 0,\n};\n\nconst addReducer = (state = initialState, action) =>\n  produce(state, draft => {\n    switch (action.type) {\n      case LOAD_CATEGORY_SUCCESS:\n        draft.categoryList = action.data.category;\n        break;\n      case LOAD_PLATE_SUCCESS:\n        draft.plateList = action.data.plate;\n        break;\n      case LOAD_DRAFT_SUCCESS:\n        draft.draftList = action.data.data;\n        draft.page = action.data.current;\n        draft.total = action.data.total;\n        break;\n      default:\n        return state;\n    }\n  });\n\nexport default addReducer;\n","export const LOAD_CATEGORY = '/Draft/List/LOAD_CATEGORY';\nexport const LOAD_CATEGORY_SUCCESS = '/Draft/List/LOAD_CATEGORY_SUCCESS';\n\nexport const LOAD_PLATE = '/Draft/List/LOAD_PLATE';\nexport const LOAD_PLATE_SUCCESS = '/Draft/List/LOAD_PLATE_SUCCESS';\n\nexport const LOAD_DRAFT = '/Draft/List/LOAD_DRAFT';\nexport const LOAD_DRAFT_SUCCESS = '/Draft/List/LOAD_DRAFT_SUCCESS';\n\nexport function loadDraft(params) {\n  return {\n    type: LOAD_DRAFT,\n    params,\n  };\n}\n\nexport function loadDraftSuccess(data) {\n  return {\n    type: LOAD_DRAFT_SUCCESS,\n    data,\n  };\n}\n\nexport function loadCategory(params) {\n  return {\n    type: LOAD_CATEGORY,\n  };\n}\n\nexport function loadCategorySuccess(data) {\n  return {\n    type: LOAD_CATEGORY_SUCCESS,\n    data,\n  };\n}\n\nexport function loadPlate(params) {\n  return {\n    type: LOAD_PLATE,\n    params,\n  };\n}\n\nexport function loadPlateSuccess(data) {\n  return {\n    type: LOAD_PLATE_SUCCESS,\n    data,\n  };\n}"],"sourceRoot":""}
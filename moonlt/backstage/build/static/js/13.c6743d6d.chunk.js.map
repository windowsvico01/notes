{"version":3,"sources":["containers/Pages/Draft/Add/index.js","containers/Pages/Draft/Add/actions.js","containers/Pages/Draft/Add/selectors.js","utils/tools.js","components/Editor/index.js"],"names":["TabPane","Tabs","TextArea","Input","Option","Select","ButtonCon","styled","div","_templateObject","transCategoryData","data","finalData","forEach","item","pid","title","name","value","cid","key","push","findChild","arr","finalChild","pNode","index","tChild","cNode","length","children","Add","props","_this","Object","_Users_yangpu_bt_notes_moonlt_backstage_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_yangpu_bt_notes_moonlt_backstage_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_yangpu_bt_notes_moonlt_backstage_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","handleLoadPlate","params","state","formRef","current","setFieldsValue","plate","loadPlate","handleFilesChange","values","timer","clearTimeout","tTimer","setTimeout","fieldsChange","setState","handlePublish","validateFields","then","keys","join","type","publishDraft","React","createRef","loadCategory","_this2","_this$props","categoryList","plateList","fields","layout","labelCol","span","wrapperCol","layoutRight","operations","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","antd__WEBPACK_IMPORTED_MODULE_13__","onClick","uploadProps","action","onChange","info","file","status","console","log","fileList","message","success","concat","error","_components_Style__WEBPACK_IMPORTED_MODULE_20__","style","float","icon","_ant_design_icons__WEBPACK_IMPORTED_MODULE_18__","history","goBack","minWidth","antd__WEBPACK_IMPORTED_MODULE_10__","defaultActiveKey","tabBarExtraContent","tab","antd__WEBPACK_IMPORTED_MODULE_15__","ref","onFieldsChange","_","all","initialValues","Item","assign","label","antd__WEBPACK_IMPORTED_MODULE_16__","dropdownStyle","maxHeight","overflow","treeData","placeholder","treeDefaultExpandAll","antd__WEBPACK_IMPORTED_MODULE_12__","mode","defaultValue","map","id","antd__WEBPACK_IMPORTED_MODULE_11__","rows","_components_Editor__WEBPACK_IMPORTED_MODULE_25__","antd__WEBPACK_IMPORTED_MODULE_17__","_ant_design_icons__WEBPACK_IMPORTED_MODULE_19__","Component","connect","selectFields","selectCategoryList","selectPlateList","dispatch","bindActionCreators","_Users_yangpu_bt_notes_moonlt_backstage_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","actions","__webpack_require__","r","__webpack_exports__","d","LOAD_CATEGORY","LOAD_CATEGORY_SUCCESS","LOAD_PLATE","LOAD_PLATE_SUCCESS","FIELDS_CHANGE","PUBLISH_DRAFT","loadCategorySuccess","loadPlateSuccess","reselect__WEBPACK_IMPORTED_MODULE_0__","selectAddDomain","get","createSelector","subState","countNum","isNumber","str","count","re","i","len","test","c","charCodeAt","ToolDef","ToolCus","_templateObject2","Edit","_templateObject3","Editor","_Users_yangpu_bt_notes_moonlt_backstage_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_yangpu_bt_notes_moonlt_backstage_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_yangpu_bt_notes_moonlt_backstage_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","editorContent","elem","refs","editorElem","toolElem","toolDefElem","editor","E","customConfig","menus","onchange","html","create","txt","react__WEBPACK_IMPORTED_MODULE_6___default","PureComponent"],"mappings":"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","file":"static/js/13.c6743d6d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Table, Button, Modal, Form, Input, Tabs, Row, Col, Radio, TreeSelect, Select, Upload, message } from 'antd';\nimport { LeftOutlined, UploadOutlined } from '@ant-design/icons';\nimport { Title, Wrapper, RightSide, LeftSide } from '@/components/Style';\nimport styled from 'styled-components';\nimport * as actions from './actions';\nimport { selectFields, selectCategoryList, selectPlateList } from './selectors';\nimport { countNum } from '@/utils/tools';\nimport WangEditor from '@/components/Editor';\nconst { TabPane } = Tabs;\nconst { TextArea } = Input;\nconst { Option } = Select;\nconst ButtonCon = styled.div`\n  button{\n    margin-right: 15px;\n  }\n`;\n// 递归树形结构\nconst transCategoryData = (data) => {\n  const finalData = [];\n  const findChild = (arr) => {\n    const finalChild = arr;\n    arr.forEach((pNode, index) => {\n      const tChild = [];\n      data.forEach((cNode) => {\n        if (pNode.cid === cNode.pid) {\n          cNode.title = cNode.name;\n          cNode.value = cNode.cid;\n          cNode.key = cNode.cid;\n          tChild.push(cNode);\n        }\n      })\n      if (tChild.length) {\n        findChild(tChild);\n        finalChild[index].children = tChild;\n      }\n    })\n    return finalChild\n  }\n  data.forEach((item) => {\n    if (item.pid === 0) {\n      item.title = item.name;\n      item.value = item.cid;\n      item.key = item.cid;\n      finalData.push(item);\n    }\n  })\n  return findChild(finalData);\n}\nclass Add extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formRef: React.createRef(),\n    };\n  }\n  componentWillMount() {\n    this.props.loadCategory();\n  }\n  handleLoadPlate = (value) => {\n    const params = { cid: value };\n    this.state.formRef.current.setFieldsValue({ plate: []})\n    this.props.loadPlate(params);\n  }\n  handleFilesChange = (values) => {\n    if (this.state.timer) clearTimeout(this.state.timer);\n    const tTimer = setTimeout(() => {\n      this.props.fieldsChange(values);\n      this.setState({\n        timer: '',\n      })\n    }, 200)\n    this.setState({\n      timer: tTimer\n    })\n  }\n  handlePublish = () => {\n    this.state.formRef.current.validateFields().then(values => {\n      const params = {};\n      Object.keys(values).forEach((key) => {\n        if (key === 'plate') params.plate = values.plate.join(',');\n        else params[key] = values[key];\n      })\n      params.type = '1';\n      this.props.publishDraft(params);\n    })\n  }\n  render() {\n    const { categoryList, plateList, fields } = this.props;\n    const { formRef } = this.state;\n    const layout = {\n      labelCol: { span: 2 },\n      wrapperCol: { span: 22 },\n    };\n    const layoutRight = {\n      labelCol: { span: 4 },\n      wrapperCol: { span: 20 },\n    };\n    const operations = <ButtonCon>\n      <Button> 保存草稿 </Button>\n      <Button type=\"primary\" onClick={this.handlePublish}> 发布 </Button>\n      </ButtonCon>;\n    const uploadProps = {\n      name: 'cover',\n      action: 'http://127.0.0.1:3000/user/fileUpload',\n      // headers: {\n      //   authorization: 'authorization-text',\n      // },\n      onChange(info) {\n        if (info.file.status !== 'uploading') {\n          console.log(info.file, info.fileList);\n        }\n        if (info.file.status === 'done') {\n          message.success(`${info.file.name} file uploaded successfully`);\n        } else if (info.file.status === 'error') {\n          message.error(`${info.file.name} file upload failed.`);\n        }\n      },\n    }\n    return (\n      <div>\n        <Title><Button style={{ float: 'left' }} icon={<LeftOutlined />} onClick={() => this.props.history.goBack()} /><h2>添加稿件</h2></Title>\n        <Wrapper style={{ minWidth: '950px' }}>\n          <Tabs defaultActiveKey=\"1\" type=\"card\" tabBarExtraContent={operations}>\n            <TabPane tab=\"文章\" key=\"1\">\n              <Form\n                ref={formRef}\n                onFieldsChange={(_, all) => this.handleFilesChange(all)}\n                fields={(fields && fields.length) ? fields : []}\n                initialValues={[]}\n              >\n                <RightSide>\n                  <Form.Item\n                    {...layoutRight}\n                    label=\"类目\"\n                    name=\"cid\"\n                  >\n                    <TreeSelect\n                      dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\n                      treeData={transCategoryData(categoryList)}\n                      placeholder=\"请选择类目\"\n                      onChange={this.handleLoadPlate}\n                      treeDefaultExpandAll\n                    />\n                  </Form.Item>\n                  <Form.Item\n                    {...layoutRight}\n                    label=\"板块\"\n                    name=\"plate\"\n                  >\n                    <Select\n                      mode=\"tags\"\n                      placeholder=\"请选择板块\"\n                      defaultValue={[]}\n                    >\n                      {plateList && !!plateList.length && plateList.map((item) => {\n                        return <Option key={item.id}>{item.name}</Option>;\n                      })}\n                    </Select>\n                  </Form.Item>\n                </RightSide>\n                <LeftSide>\n                  <Form.Item\n                    {...layout}\n                    label=\"标题\"\n                    name=\"title\"\n                  >\n                    <Input />\n                  </Form.Item>\n                  <Form.Item\n                    {...layout}\n                    label=\"简介\"\n                    name=\"summary\"\n                  >\n                    <TextArea rows={4} />\n                  </Form.Item>\n                  <Form.Item\n                    {...layout}\n                    label=\"正文\"\n                    name=\"content\"\n                  >\n                    <WangEditor\n                      defaultValue={''}\n                    />\n                  </Form.Item>\n                  <Form.Item\n                    {...layout}\n                    label=\"封面\"\n                    name=\"cover\"\n                  >\n                    <Upload {...uploadProps}>\n                      <Button>\n                        <UploadOutlined /> Click to Upload\n                      </Button>\n                    </Upload>\n                  </Form.Item>  \n                </LeftSide>\n              </Form> \n            </TabPane>\n            <TabPane tab=\"图集\" key=\"2\">\n              Content of Tab Pane 2\n            </TabPane>\n            <TabPane tab=\"视频\" key=\"3\">\n              Content of Tab Pane 2\n            </TabPane>\n          </Tabs>\n\n        </Wrapper>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    fields: selectFields(state),\n    categoryList: selectCategoryList(state),\n    plateList: selectPlateList(state),\n  };\n}\nconst mapActionsToProps = (dispatch) => bindActionCreators({ ...actions }, dispatch);\nexport default connect(mapStateToProps, mapActionsToProps)(Add);\n","export const LOAD_CATEGORY = '/Draft/Add/LOAD_CATEGORY';\nexport const LOAD_CATEGORY_SUCCESS = '/Draft/Add/LOAD_CATEGORY_SUCCESS';\n\nexport const LOAD_PLATE = '/Draft/Add/LOAD_PLATE';\nexport const LOAD_PLATE_SUCCESS = '/Draft/Add/LOAD_PLATE_SUCCESS';\n\nexport const FIELDS_CHANGE = '/Draft/Add/FIELDS_CHANGE';\n\nexport const PUBLISH_DRAFT = '/Draft/Add/PUBLISH_DRAFT';\n\nexport function loadCategory(params) {\n  return {\n    type: LOAD_CATEGORY,\n  };\n}\n\nexport function loadCategorySuccess(data) {\n  return {\n    type: LOAD_CATEGORY_SUCCESS,\n    data,\n  };\n}\n\nexport function loadPlate(params) {\n  return {\n    type: LOAD_PLATE,\n    params,\n  };\n}\n\nexport function loadPlateSuccess(data) {\n  return {\n    type: LOAD_PLATE_SUCCESS,\n    data,\n  };\n}\n\nexport function fieldsChange(fields) {\n  return {\n    type: FIELDS_CHANGE,\n    fields,\n  }\n}\n\nexport function publishDraft(params) {\n  return {\n    type: PUBLISH_DRAFT,\n    params,\n  }\n}","import { createSelector } from 'reselect';\n// state.get 是异步的\nconst selectAddDomain = state => state.get('Draft/Add');\n\nconst selectPlateList = createSelector(\n  selectAddDomain,\n  (subState) => subState && subState.plateList,\n)\nconst selectFields = createSelector(\n  selectAddDomain,\n  (subState) => subState && subState.fields,\n)\nconst selectCategoryList = createSelector(\n  selectAddDomain,\n  (subState) => subState && subState.categoryList,\n)\nexport {\n  selectCategoryList,\n  selectPlateList,\n  selectFields,\n}","/**\n * @param str {string} 要计算的字符串，全角为1，半角为0.5\n */\nexport const countNum = (str) => {\n  let count = 0;\n  const re = /[\\u4e00-\\u9fa5]/;\n  const uFF61 = 0xFF61;\n  const uFF9F = 0xFF9F;\n  const uFFE8 = 0xFFE8;\n  const uFFEE = 0xFFEE;\n  if (str) {\n    for (let i = 0, len = str.length; i < len; i += 1) {\n      if (re.test(str[i])) {\n        count += 1;\n      } else {\n        const c = +str.charCodeAt(i);\n        if (c < 256) {\n          count += 0.5;\n        } else if ((uFF61 <= c) && (c <= uFF9F)) {\n          count += 0.5;\n        } else if ((uFFE8 <= c) && (c <= uFFEE)) {\n          count += 0.5;\n        } else {\n          count += 1;\n        }\n      }\n    } }\n  return count;\n}\n/**\n * @param str {string} 要分析的字符串\n */\nexport const isNumber = (str) => {\n  const regPos = /^\\d+(\\.\\d+)?$/; //非负浮点数\n  const regNeg = /^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/; //负浮点数\n  if (regPos.test(str) || regNeg.test(str)) return true;\n  else return false;\n}\n","import React from 'react';\nimport E from 'wangeditor';\nimport styled from 'styled-components';\n\nconst ToolDef = styled.div`\n  border: 1px solid #ccc;\n`;\nconst ToolCus = styled.div`\n  height: 30px;\n`;\nconst Edit = styled.div`\n  border: 1px solid #ccc;\n  height: 300px;\n  overflow: scroll;\n`;\nclass Editor extends React.PureComponent {\n    constructor(props){\n        super(props);\n        this.state = {\n            editorContent: '',\n        };\n    }\n    componentDidMount() {\n        const elem = this.refs.editorElem;\n        const toolElem = this.refs.toolDefElem;\n        const editor = new E(toolElem, elem);\n        // 配置工具栏\n        editor.customConfig.menus = [\n          'head',  // 标题\n          'bold',  // 粗体\n          'fontSize',  // 字号\n          'fontName',  // 字体\n          'italic',  // 斜体\n          'underline',  // 下划线\n          'strikeThrough',  // 删除线\n          'foreColor',  // 文字颜色\n          'backColor',  // 背景颜色\n          'link',  // 插入链接\n          'list',  // 列表\n          'justify',  // 对齐方式\n          'quote',  // 引用\n          // 'emoticon',  // 表情\n          // 'image',  // 插入图片\n          'table',  // 表格\n          // 'video',  // 插入视频\n          'code',  // 插入代码\n          'undo',  // 撤销\n          'redo'  // 重复\n        ];\n        // 使用 onchange 函数监听内容的变化，并实时更新到 state 中\n        editor.customConfig.onchange = html => {\n            this.setState({\n              editorContent: html\n            })\n            console.log(this.props.onChange);\n            if (this.props.onChange) this.props.onChange(html);\n        }\n        editor.create()\n        editor.txt.html(this.props.defaultValue || '');\n    }\n    render() {\n        return (\n            <div>\n              <ToolDef id=\"toolDef\" ref=\"toolDefElem\"></ToolDef>\n              <ToolCus id=\"toolCus\"></ToolCus>\n              <Edit ref=\"editorElem\"></Edit>\n            </div>\n        );\n    }\n}\n\nexport default Editor;"],"sourceRoot":""}
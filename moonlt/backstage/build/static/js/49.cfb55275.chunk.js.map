{"version":3,"sources":["containers/Pages/Charts/reducer.js"],"names":["__webpack_require__","r","__webpack_exports__","d","initialState","immer__WEBPACK_IMPORTED_MODULE_0__","hi","count","chartsReducer","state","arguments","length","undefined","action","produce","draft","type"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,iCAAAE,IAAA,IAAAC,EAAAL,EAAA,KAaaI,EAAe,CAC1BE,GAAI,gBACJC,MAAO,GAiBMC,UAdO,eAACC,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAASN,EAAcS,EAAvBH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OACpBE,YAAQL,EAAO,SAAAM,GACLF,EAAOG","file":"static/js/49.cfb55275.chunk.js","sourcesContent":["/*\n * HomeReducer\n *\n * The reducer takes care of our data. Using actions, we can\n * update our application state. To add a new action,\n * add it to the switch statement in the reducer function\n *\n */\n\nimport produce from 'immer';\n// import { NUM_COUNT } from './actions';\n\n// The initial state of the App\nexport const initialState = {\n  hi: 'hihihihiihihi',\n  count: 1,\n};\n/* eslint-disable default-case, no-param-reassign */\nconst chartsReducer = (state = initialState, action) =>\n  produce(state, draft => {\n    switch (action.type) {\n    //   case NUM_COUNT:\n    //     // Delete prefixed '@' from the github username\n    //     draft.count += action.num;\n    //     break;\n    }\n  });\n\n// const homeReducer = (state = initialState, action) => {\n//   return state;\n// };\n\nexport default chartsReducer;\n"],"sourceRoot":""}
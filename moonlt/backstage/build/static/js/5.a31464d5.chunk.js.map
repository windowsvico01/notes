{"version":3,"sources":["../node_modules/@ant-design/icons/ArrowRightOutlined.js","../node_modules/@ant-design/icons/lib/icons/ArrowRightOutlined.js","../node_modules/@ant-design/icons-svg/lib/asn/ArrowRightOutlined.js","../node_modules/@ant-design/icons/ArrowLeftOutlined.js","../node_modules/@ant-design/icons/lib/icons/ArrowLeftOutlined.js","../node_modules/@ant-design/icons-svg/lib/asn/ArrowLeftOutlined.js","../node_modules/wangeditor/release/wangEditor.js","../node_modules/antd/node_modules/rc-util/es/KeyCode.js","../node_modules/antd/es/_util/transButton.js","../node_modules/antd/es/page-header/index.js"],"names":["obj","Object","defineProperty","exports","value","default","_default","__webpack_require__","__esModule","module","_react","_interopRequireDefault","_ArrowRightOutlined","_AntdIcon","ArrowRightOutlined","props","ref","createElement","assign","icon","displayName","forwardRef","name","theme","tag","attrs","viewBox","focusable","children","d","_ArrowLeftOutlined","ArrowLeftOutlined","isDOMList","selector","HTMLCollection","NodeList","eventList","DomElement","this","nodeType","selectorResult","Array","replace","trim","indexOf","html","div","document","innerHTML","createElemByHTML","result","querySelectorAll","length","i","$","prototype","constructor","forEach","fn","elem","call","clone","deep","cloneList","push","cloneNode","get","index","first","last","on","type","types","split","addEventListener","e","target","matches","off","removeEventListener","attr","key","val","getAttribute","setAttribute","addClass","className","arr","filter","item","join","removeClass","css","currentStyle","style","resultArr","map","show","hide","childNodes","append","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","focus","parentUntil","_currentElem","results","equal","$elem","insertBefore","$referenceNode","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","config","menus","fontNames","colors","emotions","title","content","alt","src","zIndex","debug","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","url","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","editor","files","success","fail","error","timeout","qiniu","UA","_ua","navigator","userAgent","isWebkit","test","isIE","window","objForEach","hasOwnProperty","arrForEach","fakeArr","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","isFunction","Bold","_active","onClick","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","replaceLang","str","langArgs","reg","_emptyFn","DropList","menu","opt","_this","$container","$title","titleHtml","list","$list","elemHtml","$li","hideTimeoutId","setTimeout","_rendered","_show","Head","droplist","width","_command","FontSize","FontName","fontName","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","color","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","$body","$textContainerElem","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","event","needToHide","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","$selectionELem","selectionText","checkResult","alert","$parent","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$tbody","$trs","trLength","tr","locationData","trData","$currentTr","tdData","newTr","tdIndex","$trParent","$currentTd","toLowerCase","newTd","$table","textValId","width30","width50","width100","delBtn","tabsConfig","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","$file","fileElem","click","fileList","$linkUrl","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","MenuConstructors","Menus","getPasteText","clipboardData","originalEvent","getData","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$bar","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","init","configMenus","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","getJSON","getChildrenJSON","curElem","elemResult","textContent","attrData","attrList","attributes","attrListLength","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","keyCode","pHandle","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","codeHandle","txtHtml","ignoreImg","pasteTime","canDo","now","Date","flag","pasteHtml","filterStyle","pasteText","docSplitHtml","getPasteHtml","ex","pasteFiles","items","getAsFile","getPasteImgs","$document","dataTransfer","_useStyleWithCSS","execCommand","_name","_execCommand","change","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_typeof","Symbol","iterator","UploadImg","_alert","alertInfo","debugInfo","customAlert","Error","img","onload","callback","onerror","onabort","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","size","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","customInsert","errno","data","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","editorId","Editor","toolbarSelector","textSelector","id","customConfig","_initConfig","langConfig","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","txt","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","onchange","currentHtml","create","_offAllEvent","varArgs","TypeError","to","arguments","nextSource","nextKey","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","getElementsByTagName","wangEditor","factory","KeyCode","MAC_ENTER","BACKSPACE","TAB","NUM_CENTER","ENTER","SHIFT","CTRL","ALT","PAUSE","CAPS_LOCK","ESC","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT","UP","RIGHT","DOWN","PRINT_SCREEN","INSERT","DELETE","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","QUESTION_MARK","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","META","WIN_KEY_RIGHT","CONTEXT_MENU","NUM_ZERO","NUM_ONE","NUM_TWO","NUM_THREE","NUM_FOUR","NUM_FIVE","NUM_SIX","NUM_SEVEN","NUM_EIGHT","NUM_NINE","NUM_MULTIPLY","NUM_PLUS","NUM_MINUS","NUM_PERIOD","NUM_DIVISION","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NUMLOCK","SEMICOLON","DASH","EQUALS","COMMA","PERIOD","SLASH","APOSTROPHE","SINGLE_QUOTE","OPEN_SQUARE_BRACKET","BACKSLASH","CLOSE_SQUARE_BRACKET","WIN_KEY","MAC_FF_META","WIN_IME","isTextModifyingKeyEvent","altKey","ctrlKey","metaKey","isCharacterKey","es_KeyCode","_extends","source","apply","_defineProperties","descriptor","enumerable","configurable","writable","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","__rest","t","getOwnPropertySymbols","propertyIsEnumerable","inlineStyle","border","background","padding","lineHeight","display","transButton","_React$Component","TransButton","instance","Constructor","_classCallCheck","onKeyDown","onKeyUp","setRef","btn","protoProps","staticProps","subClass","superClass","_inherits","react","blur","_a","noStyle","restProps","role","_defineProperty","page_header_renderTitle","prefixCls","direction","undefined","avatar","subTitle","tags","extra","onBack","headingPrefixCls","concat","backIconDom","backIcon","LocaleReceiver","componentName","_ref","back","aria-label","page_header_renderBack","ArrowRightOutlined_default","a","ArrowLeftOutlined_default","page_header_getBackIcon","es_avatar","__webpack_exports__","context","_ref2","_classnames","getPrefixCls","pageHeader","customizePrefixCls","footer","breadcrumb","customizeClassName","ghost","breadcrumbDom","routes","es_breadcrumb","page_header_renderBreadcrumb","classnames_default","has-breadcrumb","has-footer","page_header_renderChildren","page_header_renderFooter"],"mappings":"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","file":"static/js/5.a31464d5.chunk.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _ArrowRightOutlined = _interopRequireDefault(require('./lib/icons/ArrowRightOutlined'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _default = _ArrowRightOutlined;\nexports.default = _default;\nmodule.exports = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _ArrowRightOutlined = _interopRequireDefault(require(\"@ant-design/icons-svg/lib/asn/ArrowRightOutlined\"));\n\nvar _AntdIcon = _interopRequireDefault(require(\"../components/AntdIcon\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\n\nvar ArrowRightOutlined = function ArrowRightOutlined(props, ref) {\n  return _react.default.createElement(_AntdIcon.default, Object.assign({}, props, {\n    ref: ref,\n    icon: _ArrowRightOutlined.default\n  }));\n};\n\nArrowRightOutlined.displayName = 'ArrowRightOutlined';\n\nvar _default = _react.default.forwardRef(ArrowRightOutlined);\n\nexports.default = _default;","\"use strict\"; // This icon file is generated automatically.\n// tslint:disable\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArrowRightOutlined = {\n  \"name\": \"arrow-right\",\n  \"theme\": \"outlined\",\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M869 487.8L491.2 159.9c-2.9-2.5-6.6-3.9-10.5-3.9h-88.5c-7.4 0-10.8 9.2-5.2 14l350.2 304H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h585.1L386.9 854c-5.6 4.9-2.2 14 5.2 14h91.5c1.9 0 3.8-.7 5.2-2L869 536.2a32.07 32.07 0 000-48.4z\"\n      }\n    }]\n  }\n};\nexports.default = ArrowRightOutlined;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _ArrowLeftOutlined = _interopRequireDefault(require('./lib/icons/ArrowLeftOutlined'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _default = _ArrowLeftOutlined;\nexports.default = _default;\nmodule.exports = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _ArrowLeftOutlined = _interopRequireDefault(require(\"@ant-design/icons-svg/lib/asn/ArrowLeftOutlined\"));\n\nvar _AntdIcon = _interopRequireDefault(require(\"../components/AntdIcon\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\n\nvar ArrowLeftOutlined = function ArrowLeftOutlined(props, ref) {\n  return _react.default.createElement(_AntdIcon.default, Object.assign({}, props, {\n    ref: ref,\n    icon: _ArrowLeftOutlined.default\n  }));\n};\n\nArrowLeftOutlined.displayName = 'ArrowLeftOutlined';\n\nvar _default = _react.default.forwardRef(ArrowLeftOutlined);\n\nexports.default = _default;","\"use strict\"; // This icon file is generated automatically.\n// tslint:disable\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArrowLeftOutlined = {\n  \"name\": \"arrow-left\",\n  \"theme\": \"outlined\",\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M872 474H286.9l350.2-304c5.6-4.9 2.2-14-5.2-14h-88.5c-3.9 0-7.6 1.4-10.5 3.9L155 487.8a31.96 31.96 0 000 48.3L535.1 866c1.5 1.3 3.3 2 5.2 2h91.5c7.4 0 10.8-9.2 5.2-14L286.9 550H872c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\"\n      }\n    }]\n  }\n};\nexports.default = ArrowLeftOutlined;","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.wangEditor = factory();\n})(this, function () {\n  'use strict';\n  /*\n      poly-fill\n  */\n\n  var polyfill = function polyfill() {\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n      Object.assign = function (target, varArgs) {\n        // .length of function is 2\n        if (target == null) {\n          // TypeError if undefined or null\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var to = Object(target);\n\n        for (var index = 1; index < arguments.length; index++) {\n          var nextSource = arguments[index];\n\n          if (nextSource != null) {\n            // Skip over if undefined or null\n            for (var nextKey in nextSource) {\n              // Avoid bugs when hasOwnProperty is shadowed\n              if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n\n        return to;\n      };\n    } // IE 中兼容 Element.prototype.matches\n\n\n    if (!Element.prototype.matches) {\n      Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n        var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n            i = matches.length;\n\n        while (--i >= 0 && matches.item(i) !== this) {}\n\n        return i > -1;\n      };\n    }\n  };\n  /*\n      DOM 操作 API\n  */\n  // 根据 html 代码片段创建 dom 对象\n\n\n  function createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n  } // 是否是 DOM List\n\n\n  function isDOMList(selector) {\n    if (!selector) {\n      return false;\n    }\n\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n      return true;\n    }\n\n    return false;\n  } // 封装 document.querySelectorAll\n\n\n  function querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n\n    if (isDOMList(result)) {\n      return result;\n    } else {\n      return [result];\n    }\n  } // 记录所有的事件绑定\n\n\n  var eventList = []; // 创建构造函数\n\n  function DomElement(selector) {\n    if (!selector) {\n      return;\n    } // selector 本来就是 DomElement 对象，直接返回\n\n\n    if (selector instanceof DomElement) {\n      return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType; // 根据 selector 得出的结果（如 DOM，DOM List）\n\n    var selectorResult = [];\n\n    if (nodeType === 9) {\n      // document 节点\n      selectorResult = [selector];\n    } else if (nodeType === 1) {\n      // 单个 DOM 节点\n      selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n      // DOM List 或者数组\n      selectorResult = selector;\n    } else if (typeof selector === 'string') {\n      // 字符串\n      selector = selector.replace('/\\n/mg', '').trim();\n\n      if (selector.indexOf('<') === 0) {\n        // 如 <div>\n        selectorResult = createElemByHTML(selector);\n      } else {\n        // 如 #id .class\n        selectorResult = querySelectorAll(selector);\n      }\n    }\n\n    var length = selectorResult.length;\n\n    if (!length) {\n      // 空数组\n      return this;\n    } // 加入 DOM 节点\n\n\n    var i = void 0;\n\n    for (i = 0; i < length; i++) {\n      this[i] = selectorResult[i];\n    }\n\n    this.length = length;\n  } // 修改原型\n\n\n  DomElement.prototype = {\n    constructor: DomElement,\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n      var i = void 0;\n\n      for (i = 0; i < this.length; i++) {\n        var elem = this[i];\n        var result = fn.call(elem, elem, i);\n\n        if (result === false) {\n          break;\n        }\n      }\n\n      return this;\n    },\n    // clone\n    clone: function clone(deep) {\n      var cloneList = [];\n      this.forEach(function (elem) {\n        cloneList.push(elem.cloneNode(!!deep));\n      });\n      return $(cloneList);\n    },\n    // 获取第几个元素\n    get: function get(index) {\n      var length = this.length;\n\n      if (index >= length) {\n        index = index % length;\n      }\n\n      return $(this[index]);\n    },\n    // 第一个\n    first: function first() {\n      return this.get(0);\n    },\n    // 最后一个\n    last: function last() {\n      var length = this.length;\n      return this.get(length - 1);\n    },\n    // 绑定事件\n    on: function on(type, selector, fn) {\n      // selector 不为空，证明绑定事件要加代理\n      if (!fn) {\n        fn = selector;\n        selector = null;\n      } // type 是否有多个\n\n\n      var types = [];\n      types = type.split(/\\s+/);\n      return this.forEach(function (elem) {\n        types.forEach(function (type) {\n          if (!type) {\n            return;\n          } // 记录下，方便后面解绑\n\n\n          eventList.push({\n            elem: elem,\n            type: type,\n            fn: fn\n          });\n\n          if (!selector) {\n            // 无代理\n            elem.addEventListener(type, fn);\n            return;\n          } // 有代理\n\n\n          elem.addEventListener(type, function (e) {\n            var target = e.target;\n\n            if (target.matches(selector)) {\n              fn.call(target, e);\n            }\n          });\n        });\n      });\n    },\n    // 取消事件绑定\n    off: function off(type, fn) {\n      return this.forEach(function (elem) {\n        elem.removeEventListener(type, fn);\n      });\n    },\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n      if (val == null) {\n        // 获取值\n        return this[0].getAttribute(key);\n      } else {\n        // 设置值\n        return this.forEach(function (elem) {\n          elem.setAttribute(key, val);\n        });\n      }\n    },\n    // 添加 class\n    addClass: function addClass(className) {\n      if (!className) {\n        return this;\n      }\n\n      return this.forEach(function (elem) {\n        var arr = void 0;\n\n        if (elem.className) {\n          // 解析当前 className 转换为数组\n          arr = elem.className.split(/\\s/);\n          arr = arr.filter(function (item) {\n            return !!item.trim();\n          }); // 添加 class\n\n          if (arr.indexOf(className) < 0) {\n            arr.push(className);\n          } // 修改 elem.class\n\n\n          elem.className = arr.join(' ');\n        } else {\n          elem.className = className;\n        }\n      });\n    },\n    // 删除 class\n    removeClass: function removeClass(className) {\n      if (!className) {\n        return this;\n      }\n\n      return this.forEach(function (elem) {\n        var arr = void 0;\n\n        if (elem.className) {\n          // 解析当前 className 转换为数组\n          arr = elem.className.split(/\\s/);\n          arr = arr.filter(function (item) {\n            item = item.trim(); // 删除 class\n\n            if (!item || item === className) {\n              return false;\n            }\n\n            return true;\n          }); // 修改 elem.class\n\n          elem.className = arr.join(' ');\n        }\n      });\n    },\n    // 修改 css\n    css: function css(key, val) {\n      var currentStyle = key + ':' + val + ';';\n      return this.forEach(function (elem) {\n        var style = (elem.getAttribute('style') || '').trim();\n        var styleArr = void 0,\n            resultArr = [];\n\n        if (style) {\n          // 将 style 按照 ; 拆分为数组\n          styleArr = style.split(';');\n          styleArr.forEach(function (item) {\n            // 对每项样式，按照 : 拆分为 key 和 value\n            var arr = item.split(':').map(function (i) {\n              return i.trim();\n            });\n\n            if (arr.length === 2) {\n              resultArr.push(arr[0] + ':' + arr[1]);\n            }\n          }); // 替换或者新增\n\n          resultArr = resultArr.map(function (item) {\n            if (item.indexOf(key) === 0) {\n              return currentStyle;\n            } else {\n              return item;\n            }\n          });\n\n          if (resultArr.indexOf(currentStyle) < 0) {\n            resultArr.push(currentStyle);\n          } // 结果\n\n\n          elem.setAttribute('style', resultArr.join('; '));\n        } else {\n          // style 无值\n          elem.setAttribute('style', currentStyle);\n        }\n      });\n    },\n    // 显示\n    show: function show() {\n      return this.css('display', 'block');\n    },\n    // 隐藏\n    hide: function hide() {\n      return this.css('display', 'none');\n    },\n    // 获取子节点\n    children: function children() {\n      var elem = this[0];\n\n      if (!elem) {\n        return null;\n      }\n\n      return $(elem.children);\n    },\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n      var elem = this[0];\n\n      if (!elem) {\n        return null;\n      }\n\n      return $(elem.childNodes);\n    },\n    // 增加子节点\n    append: function append($children) {\n      return this.forEach(function (elem) {\n        $children.forEach(function (child) {\n          elem.appendChild(child);\n        });\n      });\n    },\n    // 移除当前节点\n    remove: function remove() {\n      return this.forEach(function (elem) {\n        if (elem.remove) {\n          elem.remove();\n        } else {\n          var parent = elem.parentElement;\n          parent && parent.removeChild(elem);\n        }\n      });\n    },\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n      var elem = this[0];\n      var child = $child[0];\n      return elem.contains(child);\n    },\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n      var elem = this[0];\n      return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n      var elem = this[0];\n      return elem.nodeName;\n    },\n    // 从当前元素查找\n    find: function find(selector) {\n      var elem = this[0];\n      return $(elem.querySelectorAll(selector));\n    },\n    // 获取当前元素的 text\n    text: function text(val) {\n      if (!val) {\n        // 获取 text\n        var elem = this[0];\n        return elem.innerHTML.replace(/<.*?>/g, function () {\n          return '';\n        });\n      } else {\n        // 设置 text\n        return this.forEach(function (elem) {\n          elem.innerHTML = val;\n        });\n      }\n    },\n    // 获取 html\n    html: function html(value) {\n      var elem = this[0];\n\n      if (value == null) {\n        return elem.innerHTML;\n      } else {\n        elem.innerHTML = value;\n        return this;\n      }\n    },\n    // 获取 value\n    val: function val() {\n      var elem = this[0];\n      return elem.value.trim();\n    },\n    // focus\n    focus: function focus() {\n      return this.forEach(function (elem) {\n        elem.focus();\n      });\n    },\n    // parent\n    parent: function parent() {\n      var elem = this[0];\n      return $(elem.parentElement);\n    },\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n      var results = document.querySelectorAll(selector);\n      var length = results.length;\n\n      if (!length) {\n        // 传入的 selector 无效\n        return null;\n      }\n\n      var elem = _currentElem || this[0];\n\n      if (elem.nodeName === 'BODY') {\n        return null;\n      }\n\n      var parent = elem.parentElement;\n      var i = void 0;\n\n      for (i = 0; i < length; i++) {\n        if (parent === results[i]) {\n          // 找到，并返回\n          return $(parent);\n        }\n      } // 继续查找\n\n\n      return this.parentUntil(selector, parent);\n    },\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n      if ($elem.nodeType === 1) {\n        return this[0] === $elem;\n      } else {\n        return this[0] === $elem[0];\n      }\n    },\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n      var $referenceNode = $(selector);\n      var referenceNode = $referenceNode[0];\n\n      if (!referenceNode) {\n        return this;\n      }\n\n      return this.forEach(function (elem) {\n        var parent = referenceNode.parentNode;\n        parent.insertBefore(elem, referenceNode);\n      });\n    },\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n      var $referenceNode = $(selector);\n      var referenceNode = $referenceNode[0];\n\n      if (!referenceNode) {\n        return this;\n      }\n\n      return this.forEach(function (elem) {\n        var parent = referenceNode.parentNode;\n\n        if (parent.lastChild === referenceNode) {\n          // 最后一个元素\n          parent.appendChild(elem);\n        } else {\n          // 不是最后一个元素\n          parent.insertBefore(elem, referenceNode.nextSibling);\n        }\n      });\n    }\n  }; // new 一个对象\n\n  function $(selector) {\n    return new DomElement(selector);\n  } // 解绑所有事件，用于销毁编辑器\n\n\n  $.offAll = function () {\n    eventList.forEach(function (item) {\n      var elem = item.elem;\n      var type = item.type;\n      var fn = item.fn; // 解绑\n\n      elem.removeEventListener(type, fn);\n    });\n  };\n  /*\n      配置信息\n  */\n\n\n  var config = {\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n    // 表情\n    emotions: [{\n      // tab 的标题\n      title: '默认',\n      // type -> 'emoji' / 'image'\n      type: 'image',\n      // content -> 数组\n      content: [{\n        alt: '[坏笑]',\n        src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n      }, {\n        alt: '[舔屏]',\n        src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n      }, {\n        alt: '[污]',\n        src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n      }]\n    }, {\n      // tab 的标题\n      title: '新浪',\n      // type -> 'emoji' / 'image'\n      type: 'image',\n      // content -> 数组\n      content: [{\n        src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n        alt: '[草泥马]'\n      }, {\n        src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n        alt: '[神马]'\n      }, {\n        src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n        alt: '[浮云]'\n      }]\n    }, {\n      // tab 的标题\n      title: 'emoji',\n      // type -> 'emoji' / 'image'\n      type: 'emoji',\n      // content -> 数组\n      content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n    // 编辑区域的 z-index\n    zIndex: 10000,\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n      // text 是插入的文字\n      // link 是插入的链接\n      return true; // 返回 true 即表示成功\n      // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n      // src 即图片的地址\n      return true; // 返回 true 即表示成功\n      // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n      // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n      return content;\n    },\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {// console.log(url)  // url 即插入图片的地址\n    },\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n    // 自定义配置 filename\n    uploadFileName: '',\n    // 上传图片的自定义参数\n    uploadImgParams: {// token: 'abcdef12345'\n    },\n    // 上传图片的自定义header\n    uploadImgHeaders: {// 'Accept': 'text/x-json'\n    },\n    // 配置 XHR withCredentials\n    withCredentials: false,\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n    // 上传图片 hook \n    uploadImgHooks: {\n      // customInsert: function (insertLinkImg, result, editor) {\n      //     console.log('customInsert')\n      //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n      //     const data = result.data1 || []\n      //     data.forEach(link => {\n      //         insertLinkImg(link)\n      //     })\n      // },\n      before: function before(xhr, editor, files) {// 图片上传之前触发\n        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n        // return {\n        //     prevent: true,\n        //     msg: '放弃上传'\n        // }\n      },\n      success: function success(xhr, editor, result) {// 图片上传并返回结果，图片插入成功之后触发\n      },\n      fail: function fail(xhr, editor, result) {// 图片上传并返回结果，但图片插入错误时触发\n      },\n      error: function error(xhr, editor) {// 图片上传出错时触发\n      },\n      timeout: function timeout(xhr, editor) {// 图片上传超时时触发\n      }\n    },\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n  };\n  /*\n      工具\n  */\n  // 和 UA 相关的属性\n\n  var UA = {\n    _ua: navigator.userAgent,\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n      var reg = /webkit/i;\n      return reg.test(this._ua);\n    },\n    // 是否 IE\n    isIE: function isIE() {\n      return 'ActiveXObject' in window;\n    }\n  }; // 遍历对象\n\n  function objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n\n    for (key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        result = fn.call(obj, key, obj[key]);\n\n        if (result === false) {\n          break;\n        }\n      }\n    }\n  } // 遍历类数组\n\n\n  function arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n\n    for (i = 0; i < length; i++) {\n      item = fakeArr[i];\n      result = fn.call(fakeArr, item, i);\n\n      if (result === false) {\n        break;\n      }\n    }\n  } // 获取随机数\n\n\n  function getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n  } // 替换 html 特殊字符\n\n\n  function replaceHtmlSymbol(html) {\n    if (html == null) {\n      return '';\n    }\n\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n  } // 返回百分比的格式\n  // 判断是不是 function\n\n\n  function isFunction(fn) {\n    return typeof fn === 'function';\n  }\n  /*\n      bold-menu\n  */\n  // 构造函数\n\n\n  function Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Bold.prototype = {\n    constructor: Bold,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor;\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n      if (isSeleEmpty) {\n        // 选区是空的，插入并选中一个“空白”\n        editor.selection.createEmptyRange();\n      } // 执行 bold 命令\n\n\n      editor.cmd.do('bold');\n\n      if (isSeleEmpty) {\n        // 需要将选取折叠起来\n        editor.selection.collapseRange();\n        editor.selection.restoreSelection();\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('bold')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      替换多语言\n   */\n\n  var replaceLang = function replaceLang(editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n    langArgs.forEach(function (item) {\n      var reg = item.reg;\n      var val = item.val;\n\n      if (reg.test(result)) {\n        result = result.replace(reg, function () {\n          return val;\n        });\n      }\n    });\n    return result;\n  };\n  /*\n      droplist\n  */\n\n\n  var _emptyFn = function _emptyFn() {}; // 构造函数\n\n\n  function DropList(menu, opt) {\n    var _this = this; // droplist 所依附的菜单\n\n\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt; // 容器\n\n    var $container = $('<div class=\"w-e-droplist\"></div>'); // 标题\n\n    var $title = opt.$title;\n    var titleHtml = void 0;\n\n    if ($title) {\n      // 替换多语言\n      titleHtml = $title.html();\n      titleHtml = replaceLang(editor, titleHtml);\n      $title.html(titleHtml);\n      $title.addClass('w-e-dp-title');\n      $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n\n    var onClick = opt.onClick || _emptyFn; // 加入 DOM 并绑定事件\n\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n      var $elem = item.$elem; // 替换多语言\n\n      var elemHtml = $elem.html();\n      elemHtml = replaceLang(editor, elemHtml);\n      $elem.html(elemHtml);\n      var value = item.value;\n      var $li = $('<li class=\"w-e-item\"></li>');\n\n      if ($elem) {\n        $li.append($elem);\n        $list.append($li);\n        $li.on('click', function (e) {\n          onClick(value); // 隐藏\n\n          _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n          }, 0);\n        });\n      }\n    }); // 绑定隐藏事件\n\n    $container.on('mouseleave', function (e) {\n      _this.hideTimeoutId = setTimeout(function () {\n        _this.hide();\n      }, 0);\n    }); // 记录属性\n\n    this.$container = $container; // 基本属性\n\n    this._rendered = false;\n    this._show = false;\n  } // 原型\n\n\n  DropList.prototype = {\n    constructor: DropList,\n    // 显示（插入DOM）\n    show: function show() {\n      if (this.hideTimeoutId) {\n        // 清除之前的定时隐藏\n        clearTimeout(this.hideTimeoutId);\n      }\n\n      var menu = this.menu;\n      var $menuELem = menu.$elem;\n      var $container = this.$container;\n\n      if (this._show) {\n        return;\n      }\n\n      if (this._rendered) {\n        // 显示\n        $container.show();\n      } else {\n        // 加入 DOM 之前先定位位置\n        var menuHeight = $menuELem.getSizeData().height || 0;\n        var width = this.opt.width || 100; // 默认为 100\n\n        $container.css('margin-top', menuHeight + 'px').css('width', width + 'px'); // 加入到 DOM\n\n        $menuELem.append($container);\n        this._rendered = true;\n      } // 修改属性\n\n\n      this._show = true;\n    },\n    // 隐藏（移除DOM）\n    hide: function hide() {\n      if (this.showTimeoutId) {\n        // 清除之前的定时显示\n        clearTimeout(this.showTimeoutId);\n      }\n\n      var $container = this.$container;\n\n      if (!this._show) {\n        return;\n      } // 隐藏并需改属性\n\n\n      $container.hide();\n      this._show = false;\n    }\n  };\n  /*\n      menu - header\n  */\n  // 构造函数\n\n  function Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 100,\n      $title: $('<p>设置标题</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: [{\n        $elem: $('<h1>H1</h1>'),\n        value: '<h1>'\n      }, {\n        $elem: $('<h2>H2</h2>'),\n        value: '<h2>'\n      }, {\n        $elem: $('<h3>H3</h3>'),\n        value: '<h3>'\n      }, {\n        $elem: $('<h4>H4</h4>'),\n        value: '<h4>'\n      }, {\n        $elem: $('<h5>H5</h5>'),\n        value: '<h5>'\n      }, {\n        $elem: $('<p>正文</p>'),\n        value: '<p>'\n      }],\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 Head 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  Head.prototype = {\n    constructor: Head,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      var $selectionElem = editor.selection.getSelectionContainerElem();\n\n      if (editor.$textElem.equal($selectionElem)) {\n        // 不能选中多行来设置标题，否则会出现问题\n        // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n        return;\n      }\n\n      editor.cmd.do('formatBlock', value);\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var reg = /^h/i;\n      var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n\n      if (reg.test(cmdValue)) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - fontSize\n  */\n  // 构造函数\n\n  function FontSize(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 160,\n      $title: $('<p>字号</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: [{\n        $elem: $('<span style=\"font-size: x-small;\">x-small</span>'),\n        value: '1'\n      }, {\n        $elem: $('<span style=\"font-size: small;\">small</span>'),\n        value: '2'\n      }, {\n        $elem: $('<span>normal</span>'),\n        value: '3'\n      }, {\n        $elem: $('<span style=\"font-size: large;\">large</span>'),\n        value: '4'\n      }, {\n        $elem: $('<span style=\"font-size: x-large;\">x-large</span>'),\n        value: '5'\n      }, {\n        $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'),\n        value: '6'\n      }],\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 FontSize 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  FontSize.prototype = {\n    constructor: FontSize,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do('fontSize', value);\n    }\n  };\n  /*\n      menu - fontName\n  */\n  // 构造函数\n\n  function FontName(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 获取配置的字体\n\n    var config = editor.config;\n    var fontNames = config.fontNames || []; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 100,\n      $title: $('<p>字体</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: fontNames.map(function (fontName) {\n        return {\n          $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'),\n          value: fontName\n        };\n      }),\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 FontName 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  FontName.prototype = {\n    constructor: FontName,\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do('fontName', value);\n    }\n  };\n  /*\n      panel\n  */\n\n  var emptyFn = function emptyFn() {}; // 记录已经显示 panel 的菜单\n\n\n  var _isCreatedPanelMenus = []; // 构造函数\n\n  function Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n  } // 原型\n\n\n  Panel.prototype = {\n    constructor: Panel,\n    // 显示（插入DOM）\n    show: function show() {\n      var _this = this;\n\n      var menu = this.menu;\n\n      if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n        // 该菜单已经创建了 panel 不能再创建\n        return;\n      }\n\n      var editor = menu.editor;\n      var $body = $('body');\n      var $textContainerElem = editor.$textContainerElem;\n      var opt = this.opt; // panel 的容器\n\n      var $container = $('<div class=\"w-e-panel-container\"></div>');\n      var width = opt.width || 300; // 默认 300px\n\n      $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px'); // 添加关闭按钮\n\n      var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n      $container.append($closeBtn);\n      $closeBtn.on('click', function () {\n        _this.hide();\n      }); // 准备 tabs 容器\n\n      var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n      var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n      $container.append($tabTitleContainer).append($tabContentContainer); // 设置高度\n\n      var height = opt.height;\n\n      if (height) {\n        $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n      } // tabs\n\n\n      var tabs = opt.tabs || [];\n      var tabTitleArr = [];\n      var tabContentArr = [];\n      tabs.forEach(function (tab, tabIndex) {\n        if (!tab) {\n          return;\n        }\n\n        var title = tab.title || '';\n        var tpl = tab.tpl || ''; // 替换多语言\n\n        title = replaceLang(editor, title);\n        tpl = replaceLang(editor, tpl); // 添加到 DOM\n\n        var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n        $tabTitleContainer.append($title);\n        var $content = $(tpl);\n        $tabContentContainer.append($content); // 记录到内存\n\n        $title._index = tabIndex;\n        tabTitleArr.push($title);\n        tabContentArr.push($content); // 设置 active 项\n\n        if (tabIndex === 0) {\n          $title._active = true;\n          $title.addClass('w-e-active');\n        } else {\n          $content.hide();\n        } // 绑定 tab 的事件\n\n\n        $title.on('click', function (e) {\n          if ($title._active) {\n            return;\n          } // 隐藏所有的 tab\n\n\n          tabTitleArr.forEach(function ($title) {\n            $title._active = false;\n            $title.removeClass('w-e-active');\n          });\n          tabContentArr.forEach(function ($content) {\n            $content.hide();\n          }); // 显示当前的 tab\n\n          $title._active = true;\n          $title.addClass('w-e-active');\n          $content.show();\n        });\n      }); // 绑定关闭事件\n\n      $container.on('click', function (e) {\n        // 点击时阻止冒泡\n        e.stopPropagation();\n      });\n      $body.on('click', function (e) {\n        _this.hide();\n      }); // 添加到 DOM\n\n      $textContainerElem.append($container); // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n\n      tabs.forEach(function (tab, index) {\n        if (!tab) {\n          return;\n        }\n\n        var events = tab.events || [];\n        events.forEach(function (event) {\n          var selector = event.selector;\n          var type = event.type;\n          var fn = event.fn || emptyFn;\n          var $content = tabContentArr[index];\n          $content.find(selector).on(type, function (e) {\n            e.stopPropagation();\n            var needToHide = fn(e); // 执行完事件之后，是否要关闭 panel\n\n            if (needToHide) {\n              _this.hide();\n            }\n          });\n        });\n      }); // focus 第一个 elem\n\n      var $inputs = $container.find('input[type=text],textarea');\n\n      if ($inputs.length) {\n        $inputs.get(0).focus();\n      } // 添加到属性\n\n\n      this.$container = $container; // 隐藏其他 panel\n\n      this._hideOtherPanels(); // 记录该 menu 已经创建了 panel\n\n\n      _isCreatedPanelMenus.push(menu);\n    },\n    // 隐藏（移除DOM）\n    hide: function hide() {\n      var menu = this.menu;\n      var $container = this.$container;\n\n      if ($container) {\n        $container.remove();\n      } // 将该 menu 记录中移除\n\n\n      _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n        if (item === menu) {\n          return false;\n        } else {\n          return true;\n        }\n      });\n    },\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n      if (!_isCreatedPanelMenus.length) {\n        return;\n      }\n\n      _isCreatedPanelMenus.forEach(function (menu) {\n        var panel = menu.panel || {};\n\n        if (panel.hide) {\n          panel.hide();\n        }\n      });\n    }\n  };\n  /*\n      menu - link\n  */\n  // 构造函数\n\n  function Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Link.prototype = {\n    constructor: Link,\n    // 点击事件\n    onClick: function onClick(e) {\n      var editor = this.editor;\n      var $linkelem = void 0;\n\n      if (this._active) {\n        // 当前选区在链接里面\n        $linkelem = editor.selection.getSelectionContainerElem();\n\n        if (!$linkelem) {\n          return;\n        } // 将该元素都包含在选取之内，以便后面整体替换\n\n\n        editor.selection.createRangeByElem($linkelem);\n        editor.selection.restoreSelection(); // 显示 panel\n\n        this._createPanel($linkelem.text(), $linkelem.attr('href'));\n      } else {\n        // 当前选区不在链接里面\n        if (editor.selection.isSelectionEmpty()) {\n          // 选区是空的，未选中内容\n          this._createPanel('', '');\n        } else {\n          // 选中内容了\n          this._createPanel(editor.selection.getSelectionText(), '');\n        }\n      }\n    },\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n      var _this = this; // panel 中需要用到的id\n\n\n      var inputLinkId = getRandom('input-link');\n      var inputTextId = getRandom('input-text');\n      var btnOkId = getRandom('btn-ok');\n      var btnDelId = getRandom('btn-del'); // 是否显示“删除链接”\n\n      var delBtnDisplay = this._active ? 'inline-block' : 'none'; // 初始化并显示 panel\n\n      var panel = new Panel(this, {\n        width: 300,\n        // panel 中可包含多个 tab\n        tabs: [{\n          // tab 的标题\n          title: '链接',\n          // 模板\n          tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + \"\\\" placeholder=\\\"\\u94FE\\u63A5\\u6587\\u5B57\\\"/></td>\\n                            <input id=\\\"\" + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                                <button id=\\\"\" + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + \"\\\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>\",\n          // 事件绑定\n          events: [// 插入链接\n          {\n            selector: '#' + btnOkId,\n            type: 'click',\n            fn: function fn() {\n              // 执行插入链接\n              var $link = $('#' + inputLinkId);\n              var $text = $('#' + inputTextId);\n              var link = $link.val();\n              var text = $text.val();\n\n              _this._insertLink(text, link); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, // 删除链接\n          {\n            selector: '#' + btnDelId,\n            type: 'click',\n            fn: function fn() {\n              // 执行删除链接\n              _this._delLink(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }] // tab end\n\n        }] // tabs end\n\n      }); // 显示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 删除当前链接\n    _delLink: function _delLink() {\n      if (!this._active) {\n        return;\n      }\n\n      var editor = this.editor;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var selectionText = editor.selection.getSelectionText();\n      editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n      var editor = this.editor;\n      var config = editor.config;\n      var linkCheck = config.linkCheck;\n      var checkResult = true; // 默认为 true\n\n      if (linkCheck && typeof linkCheck === 'function') {\n        checkResult = linkCheck(text, link);\n      }\n\n      if (checkResult === true) {\n        editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n      } else {\n        alert(checkResult);\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      if ($selectionELem.getNodeName() === 'A') {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      italic-menu\n  */\n  // 构造函数\n\n  function Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Italic.prototype = {\n    constructor: Italic,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor;\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n      if (isSeleEmpty) {\n        // 选区是空的，插入并选中一个“空白”\n        editor.selection.createEmptyRange();\n      } // 执行 italic 命令\n\n\n      editor.cmd.do('italic');\n\n      if (isSeleEmpty) {\n        // 需要将选取折叠起来\n        editor.selection.collapseRange();\n        editor.selection.restoreSelection();\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('italic')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      redo-menu\n  */\n  // 构造函数\n\n  function Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Redo.prototype = {\n    constructor: Redo,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor; // 执行 redo 命令\n\n      editor.cmd.do('redo');\n    }\n  };\n  /*\n      strikeThrough-menu\n  */\n  // 构造函数\n\n  function StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  StrikeThrough.prototype = {\n    constructor: StrikeThrough,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor;\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n      if (isSeleEmpty) {\n        // 选区是空的，插入并选中一个“空白”\n        editor.selection.createEmptyRange();\n      } // 执行 strikeThrough 命令\n\n\n      editor.cmd.do('strikeThrough');\n\n      if (isSeleEmpty) {\n        // 需要将选取折叠起来\n        editor.selection.collapseRange();\n        editor.selection.restoreSelection();\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('strikeThrough')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      underline-menu\n  */\n  // 构造函数\n\n  function Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Underline.prototype = {\n    constructor: Underline,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor;\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n      if (isSeleEmpty) {\n        // 选区是空的，插入并选中一个“空白”\n        editor.selection.createEmptyRange();\n      } // 执行 underline 命令\n\n\n      editor.cmd.do('underline');\n\n      if (isSeleEmpty) {\n        // 需要将选取折叠起来\n        editor.selection.collapseRange();\n        editor.selection.restoreSelection();\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('underline')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      undo-menu\n  */\n  // 构造函数\n\n  function Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Undo.prototype = {\n    constructor: Undo,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor; // 执行 undo 命令\n\n      editor.cmd.do('undo');\n    }\n  };\n  /*\n      menu - list\n  */\n  // 构造函数\n\n  function List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 120,\n      $title: $('<p>设置列表</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: [{\n        $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'),\n        value: 'insertOrderedList'\n      }, {\n        $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'),\n        value: 'insertUnorderedList'\n      }],\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 List 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  List.prototype = {\n    constructor: List,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      editor.selection.restoreSelection();\n\n      if (editor.cmd.queryCommandState(value)) {\n        return;\n      }\n\n      editor.cmd.do(value); // 验证列表是否被包裹在 <p> 之内\n\n      var $selectionElem = editor.selection.getSelectionContainerElem();\n\n      if ($selectionElem.getNodeName() === 'LI') {\n        $selectionElem = $selectionElem.parent();\n      }\n\n      if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n        return;\n      }\n\n      if ($selectionElem.equal($textElem)) {\n        // 证明是顶级标签，没有被 <p> 包裹\n        return;\n      }\n\n      var $parent = $selectionElem.parent();\n\n      if ($parent.equal($textElem)) {\n        // $parent 是顶级标签，不能删除\n        return;\n      }\n\n      $selectionElem.insertAfter($parent);\n      $parent.remove();\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - justify\n  */\n  // 构造函数\n\n  function Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 100,\n      $title: $('<p>对齐方式</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: [{\n        $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'),\n        value: 'justifyLeft'\n      }, {\n        $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'),\n        value: 'justifyCenter'\n      }, {\n        $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'),\n        value: 'justifyRight'\n      }],\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 List 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  Justify.prototype = {\n    constructor: Justify,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do(value);\n    }\n  };\n  /*\n      menu - Forecolor\n  */\n  // 构造函数\n\n  function ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n    this.type = 'droplist'; // 获取配置的颜色\n\n    var config = editor.config;\n    var colors = config.colors || []; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 120,\n      $title: $('<p>文字颜色</p>'),\n      type: 'inline-block',\n      // droplist 内容以 block 形式展示\n      list: colors.map(function (color) {\n        return {\n          $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'),\n          value: color\n        };\n      }),\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 ForeColor 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  ForeColor.prototype = {\n    constructor: ForeColor,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do('foreColor', value);\n    }\n  };\n  /*\n      menu - BackColor\n  */\n  // 构造函数\n\n  function BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n    this.type = 'droplist'; // 获取配置的颜色\n\n    var config = editor.config;\n    var colors = config.colors || []; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 120,\n      $title: $('<p>背景色</p>'),\n      type: 'inline-block',\n      // droplist 内容以 block 形式展示\n      list: colors.map(function (color) {\n        return {\n          $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'),\n          value: color\n        };\n      }),\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 BackColor 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  BackColor.prototype = {\n    constructor: BackColor,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do('backColor', value);\n    }\n  };\n  /*\n      menu - quote\n  */\n  // 构造函数\n\n  function Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Quote.prototype = {\n    constructor: Quote,\n    onClick: function onClick(e) {\n      var editor = this.editor;\n      var $selectionElem = editor.selection.getSelectionContainerElem();\n      var nodeName = $selectionElem.getNodeName();\n\n      if (!UA.isIE()) {\n        if (nodeName === 'BLOCKQUOTE') {\n          // 撤销 quote\n          editor.cmd.do('formatBlock', '<P>');\n        } else {\n          // 转换为 quote\n          editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n        }\n\n        return;\n      } // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n\n\n      var content = void 0,\n          $targetELem = void 0;\n\n      if (nodeName === 'P') {\n        // 将 P 转换为 quote\n        content = $selectionElem.text();\n        $targetELem = $('<blockquote>' + content + '</blockquote>');\n        $targetELem.insertAfter($selectionElem);\n        $selectionElem.remove();\n        return;\n      }\n\n      if (nodeName === 'BLOCKQUOTE') {\n        // 撤销 quote\n        content = $selectionElem.text();\n        $targetELem = $('<p>' + content + '</p>');\n        $targetELem.insertAfter($selectionElem);\n        $selectionElem.remove();\n      }\n    },\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var reg = /^BLOCKQUOTE$/i;\n      var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n\n      if (reg.test(cmdValue)) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - code\n  */\n  // 构造函数\n\n  function Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"></i>\\n        </div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Code.prototype = {\n    constructor: Code,\n    onClick: function onClick(e) {\n      var editor = this.editor;\n      var $startElem = editor.selection.getSelectionStartElem();\n      var $endElem = editor.selection.getSelectionEndElem();\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n      var selectionText = editor.selection.getSelectionText();\n      var $code = void 0;\n\n      if (!$startElem.equal($endElem)) {\n        // 跨元素选择，不做处理\n        editor.selection.restoreSelection();\n        return;\n      }\n\n      if (!isSeleEmpty) {\n        // 选取不是空，用 <code> 包裹即可\n        $code = $('<code>' + selectionText + '</code>');\n        editor.cmd.do('insertElem', $code);\n        editor.selection.createRangeByElem($code, false);\n        editor.selection.restoreSelection();\n        return;\n      } // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n\n\n      if (this._active) {\n        // 选中状态，将编辑内容\n        this._createPanel($startElem.html());\n      } else {\n        // 未选中状态，将创建内容\n        this._createPanel();\n      }\n    },\n    _createPanel: function _createPanel(value) {\n      var _this = this; // value - 要编辑的内容\n\n\n      value = value || '';\n      var type = !value ? 'new' : 'edit';\n      var textId = getRandom('texxt');\n      var btnId = getRandom('btn');\n      var panel = new Panel(this, {\n        width: 500,\n        // 一个 Panel 包含多个 tab\n        tabs: [{\n          // 标题\n          title: '插入代码',\n          // 模板\n          tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>\",\n          // 事件绑定\n          events: [// 插入代码\n          {\n            selector: '#' + btnId,\n            type: 'click',\n            fn: function fn() {\n              var $text = $('#' + textId);\n              var text = $text.val() || $text.html();\n              text = replaceHtmlSymbol(text);\n\n              if (type === 'new') {\n                // 新插入\n                _this._insertCode(text);\n              } else {\n                // 编辑更新\n                _this._updateCode(text);\n              } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }] // first tab end\n\n        }] // tabs end\n\n      }); // new Panel end\n      // 显示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n      var editor = this.editor;\n      editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n      var editor = this.editor;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      $selectionELem.html(value);\n      editor.selection.restoreSelection();\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var $parentElem = $selectionELem.parent();\n\n      if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - emoticon\n  */\n  // 构造函数\n\n  function Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"></i>\\n        </div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Emoticon.prototype = {\n    constructor: Emoticon,\n    onClick: function onClick() {\n      this._createPanel();\n    },\n    _createPanel: function _createPanel() {\n      var _this = this;\n\n      var editor = this.editor;\n      var config = editor.config; // 获取表情配置\n\n      var emotions = config.emotions || []; // 创建表情 dropPanel 的配置\n\n      var tabConfig = [];\n      emotions.forEach(function (emotData) {\n        var emotType = emotData.type;\n        var content = emotData.content || []; // 这一组表情最终拼接出来的 html\n\n        var faceHtml = ''; // emoji 表情\n\n        if (emotType === 'emoji') {\n          content.forEach(function (item) {\n            if (item) {\n              faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n            }\n          });\n        } // 图片表情\n\n\n        if (emotType === 'image') {\n          content.forEach(function (item) {\n            var src = item.src;\n            var alt = item.alt;\n\n            if (src) {\n              // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n              faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n            }\n          });\n        }\n\n        tabConfig.push({\n          title: emotData.title,\n          tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n          events: [{\n            selector: 'span.w-e-item',\n            type: 'click',\n            fn: function fn(e) {\n              var target = e.target;\n              var $target = $(target);\n              var nodeName = $target.getNodeName();\n              var insertHtml = void 0;\n\n              if (nodeName === 'IMG') {\n                // 插入图片\n                insertHtml = $target.parent().html();\n              } else {\n                // 插入 emoji\n                insertHtml = '<span>' + $target.html() + '</span>';\n              }\n\n              _this._insert(insertHtml); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }]\n        });\n      });\n      var panel = new Panel(this, {\n        width: 300,\n        height: 200,\n        // 一个 Panel 包含多个 tab\n        tabs: tabConfig\n      }); // 显示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n      var editor = this.editor;\n      editor.cmd.do('insertHTML', emotHtml);\n    }\n  };\n  /*\n      menu - table\n  */\n  // 构造函数\n\n  function Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Table.prototype = {\n    constructor: Table,\n    onClick: function onClick() {\n      if (this._active) {\n        // 编辑现有表格\n        this._createEditPanel();\n      } else {\n        // 插入新表格\n        this._createInsertPanel();\n      }\n    },\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n      var _this = this; // 用到的 id\n\n\n      var btnInsertId = getRandom('btn');\n      var textRowNum = getRandom('row');\n      var textColNum = getRandom('col');\n      var panel = new Panel(this, {\n        width: 250,\n        // panel 包含多个 tab\n        tabs: [{\n          // 标题\n          title: '插入表格',\n          // 模板\n          tpl: \"<div>\\n                        <p style=\\\"text-align:left; padding:5px 0;\\\">\\n                            \\u521B\\u5EFA\\n                            <input id=\\\"\" + textRowNum + \"\\\" type=\\\"text\\\" value=\\\"5\\\" style=\\\"width:40px;text-align:center;\\\"/>\\n                            \\u884C\\n                            <input id=\\\"\" + textColNum + \"\\\" type=\\\"text\\\" value=\\\"5\\\" style=\\\"width:40px;text-align:center;\\\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\\\"w-e-button-container\\\">\\n                            <button id=\\\"\" + btnInsertId + \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>\",\n          // 事件绑定\n          events: [{\n            // 点击按钮，插入表格\n            selector: '#' + btnInsertId,\n            type: 'click',\n            fn: function fn() {\n              var rowNum = parseInt($('#' + textRowNum).val());\n              var colNum = parseInt($('#' + textColNum).val());\n\n              if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                // form 数据有效\n                _this._insert(rowNum, colNum);\n              } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }] // first tab end\n\n        }] // tabs end\n\n      }); // panel end\n      // 展示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n      // 拼接 table 模板\n      var r = void 0,\n          c = void 0;\n      var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n\n      for (r = 0; r < rowNum; r++) {\n        html += '<tr>';\n\n        if (r === 0) {\n          for (c = 0; c < colNum; c++) {\n            html += '<th>&nbsp;</th>';\n          }\n        } else {\n          for (c = 0; c < colNum; c++) {\n            html += '<td>&nbsp;</td>';\n          }\n        }\n\n        html += '</tr>';\n      }\n\n      html += '</table><p><br></p>'; // 执行命令\n\n      var editor = this.editor;\n      editor.cmd.do('insertHTML', html); // 防止 firefox 下出现 resize 的控制点\n\n      editor.cmd.do('enableObjectResizing', false);\n      editor.cmd.do('enableInlineTableEditing', false);\n    },\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n      var _this2 = this; // 可用的 id\n\n\n      var addRowBtnId = getRandom('add-row');\n      var addColBtnId = getRandom('add-col');\n      var delRowBtnId = getRandom('del-row');\n      var delColBtnId = getRandom('del-col');\n      var delTableBtnId = getRandom('del-table'); // 创建 panel 对象\n\n      var panel = new Panel(this, {\n        width: 320,\n        // panel 包含多个 tab\n        tabs: [{\n          // 标题\n          title: '编辑表格',\n          // 模板\n          tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + \"\\\" class=\\\"left\\\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\\\"\" + delRowBtnId + \"\\\" class=\\\"red left\\\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\\\"\" + addColBtnId + \"\\\" class=\\\"left\\\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\\\"\" + delColBtnId + \"\\\" class=\\\"red left\\\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\\\"w-e-button-container\\\">\\n                            <button id=\\\"\" + delTableBtnId + \"\\\" class=\\\"gray left\\\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>\",\n          // 事件绑定\n          events: [{\n            // 增加行\n            selector: '#' + addRowBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._addRow(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            // 增加列\n            selector: '#' + addColBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._addCol(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            // 删除行\n            selector: '#' + delRowBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._delRow(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            // 删除列\n            selector: '#' + delColBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._delCol(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            // 删除表格\n            selector: '#' + delTableBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._delTable(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }]\n        }]\n      }); // 显示 panel\n\n      panel.show();\n    },\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n      var result = {};\n      var editor = this.editor;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var nodeName = $selectionELem.getNodeName();\n\n      if (nodeName !== 'TD' && nodeName !== 'TH') {\n        return;\n      } // 获取 td index\n\n\n      var $tr = $selectionELem.parent();\n      var $tds = $tr.children();\n      var tdLength = $tds.length;\n      $tds.forEach(function (td, index) {\n        if (td === $selectionELem[0]) {\n          // 记录并跳出循环\n          result.td = {\n            index: index,\n            elem: td,\n            length: tdLength\n          };\n          return false;\n        }\n      }); // 获取 tr index\n\n      var $tbody = $tr.parent();\n      var $trs = $tbody.children();\n      var trLength = $trs.length;\n      $trs.forEach(function (tr, index) {\n        if (tr === $tr[0]) {\n          // 记录并跳出循环\n          result.tr = {\n            index: index,\n            elem: tr,\n            length: trLength\n          };\n          return false;\n        }\n      }); // 返回结果\n\n      return result;\n    },\n    // 增加行\n    _addRow: function _addRow() {\n      // 获取当前单元格的位置信息\n      var locationData = this._getLocationData();\n\n      if (!locationData) {\n        return;\n      }\n\n      var trData = locationData.tr;\n      var $currentTr = $(trData.elem);\n      var tdData = locationData.td;\n      var tdLength = tdData.length; // 拼接即将插入的字符串\n\n      var newTr = document.createElement('tr');\n      var tpl = '',\n          i = void 0;\n\n      for (i = 0; i < tdLength; i++) {\n        tpl += '<td>&nbsp;</td>';\n      }\n\n      newTr.innerHTML = tpl; // 插入\n\n      $(newTr).insertAfter($currentTr);\n    },\n    // 增加列\n    _addCol: function _addCol() {\n      // 获取当前单元格的位置信息\n      var locationData = this._getLocationData();\n\n      if (!locationData) {\n        return;\n      }\n\n      var trData = locationData.tr;\n      var tdData = locationData.td;\n      var tdIndex = tdData.index;\n      var $currentTr = $(trData.elem);\n      var $trParent = $currentTr.parent();\n      var $trs = $trParent.children(); // 遍历所有行\n\n      $trs.forEach(function (tr) {\n        var $tr = $(tr);\n        var $tds = $tr.children();\n        var $currentTd = $tds.get(tdIndex);\n        var name = $currentTd.getNodeName().toLowerCase(); // new 一个 td，并插入\n\n        var newTd = document.createElement(name);\n        $(newTd).insertAfter($currentTd);\n      });\n    },\n    // 删除行\n    _delRow: function _delRow() {\n      // 获取当前单元格的位置信息\n      var locationData = this._getLocationData();\n\n      if (!locationData) {\n        return;\n      }\n\n      var trData = locationData.tr;\n      var $currentTr = $(trData.elem);\n      $currentTr.remove();\n    },\n    // 删除列\n    _delCol: function _delCol() {\n      // 获取当前单元格的位置信息\n      var locationData = this._getLocationData();\n\n      if (!locationData) {\n        return;\n      }\n\n      var trData = locationData.tr;\n      var tdData = locationData.td;\n      var tdIndex = tdData.index;\n      var $currentTr = $(trData.elem);\n      var $trParent = $currentTr.parent();\n      var $trs = $trParent.children(); // 遍历所有行\n\n      $trs.forEach(function (tr) {\n        var $tr = $(tr);\n        var $tds = $tr.children();\n        var $currentTd = $tds.get(tdIndex); // 删除\n\n        $currentTd.remove();\n      });\n    },\n    // 删除表格\n    _delTable: function _delTable() {\n      var editor = this.editor;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var $table = $selectionELem.parentUntil('table');\n\n      if (!$table) {\n        return;\n      }\n\n      $table.remove();\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var nodeName = $selectionELem.getNodeName();\n\n      if (nodeName === 'TD' || nodeName === 'TH') {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - video\n  */\n  // 构造函数\n\n  function Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Video.prototype = {\n    constructor: Video,\n    onClick: function onClick() {\n      this._createPanel();\n    },\n    _createPanel: function _createPanel() {\n      var _this = this; // 创建 id\n\n\n      var textValId = getRandom('text-val');\n      var btnId = getRandom('btn'); // 创建 panel\n\n      var panel = new Panel(this, {\n        width: 350,\n        // 一个 panel 多个 tab\n        tabs: [{\n          // 标题\n          title: '插入视频',\n          // 模板\n          tpl: '<div>\\n                        <input id=\"' + textValId + \"\\\" type=\\\"text\\\" class=\\\"block\\\" placeholder=\\\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\\\"/>\\n                        <div class=\\\"w-e-button-container\\\">\\n                            <button id=\\\"\" + btnId + \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>\",\n          // 事件绑定\n          events: [{\n            selector: '#' + btnId,\n            type: 'click',\n            fn: function fn() {\n              var $text = $('#' + textValId);\n              var val = $text.val().trim(); // 测试用视频地址\n              // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n              if (val) {\n                // 插入视频\n                _this._insert(val);\n              } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }] // first tab end\n\n        }] // tabs end\n\n      }); // panel end\n      // 显示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 插入视频\n    _insert: function _insert(val) {\n      var editor = this.editor;\n      editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n  };\n  /*\n      menu - img\n  */\n  // 构造函数\n\n  function Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Image.prototype = {\n    constructor: Image,\n    onClick: function onClick() {\n      var editor = this.editor;\n      var config = editor.config;\n\n      if (config.qiniu) {\n        return;\n      }\n\n      if (this._active) {\n        this._createEditPanel();\n      } else {\n        this._createInsertPanel();\n      }\n    },\n    _createEditPanel: function _createEditPanel() {\n      var editor = this.editor; // id\n\n      var width30 = getRandom('width-30');\n      var width50 = getRandom('width-50');\n      var width100 = getRandom('width-100');\n      var delBtn = getRandom('del-btn'); // tab 配置\n\n      var tabsConfig = [{\n        title: '编辑图片',\n        tpl: \"<div>\\n                    <div class=\\\"w-e-button-container\\\" style=\\\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\\\">\\n                        <span style=\\\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\\\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\\\"\" + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + \"\\\" class=\\\"gray left\\\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>\",\n        events: [{\n          selector: '#' + width30,\n          type: 'click',\n          fn: function fn() {\n            var $img = editor._selectedImg;\n\n            if ($img) {\n              $img.css('max-width', '30%');\n            } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n            return true;\n          }\n        }, {\n          selector: '#' + width50,\n          type: 'click',\n          fn: function fn() {\n            var $img = editor._selectedImg;\n\n            if ($img) {\n              $img.css('max-width', '50%');\n            } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n            return true;\n          }\n        }, {\n          selector: '#' + width100,\n          type: 'click',\n          fn: function fn() {\n            var $img = editor._selectedImg;\n\n            if ($img) {\n              $img.css('max-width', '100%');\n            } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n            return true;\n          }\n        }, {\n          selector: '#' + delBtn,\n          type: 'click',\n          fn: function fn() {\n            var $img = editor._selectedImg;\n\n            if ($img) {\n              $img.remove();\n            } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n            return true;\n          }\n        }]\n      }]; // 创建 panel 并显示\n\n      var panel = new Panel(this, {\n        width: 300,\n        tabs: tabsConfig\n      });\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    _createInsertPanel: function _createInsertPanel() {\n      var editor = this.editor;\n      var uploadImg = editor.uploadImg;\n      var config = editor.config; // id\n\n      var upTriggerId = getRandom('up-trigger');\n      var upFileId = getRandom('up-file');\n      var linkUrlId = getRandom('link-url');\n      var linkBtnId = getRandom('link-btn'); // tabs 的配置\n\n      var tabsConfig = [{\n        title: '上传图片',\n        tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n        events: [{\n          // 触发选择图片\n          selector: '#' + upTriggerId,\n          type: 'click',\n          fn: function fn() {\n            var $file = $('#' + upFileId);\n            var fileElem = $file[0];\n\n            if (fileElem) {\n              fileElem.click();\n            } else {\n              // 返回 true 可关闭 panel\n              return true;\n            }\n          }\n        }, {\n          // 选择图片完毕\n          selector: '#' + upFileId,\n          type: 'change',\n          fn: function fn() {\n            var $file = $('#' + upFileId);\n            var fileElem = $file[0];\n\n            if (!fileElem) {\n              // 返回 true 可关闭 panel\n              return true;\n            } // 获取选中的 file 对象列表\n\n\n            var fileList = fileElem.files;\n\n            if (fileList.length) {\n              uploadImg.uploadImg(fileList);\n            } // 返回 true 可关闭 panel\n\n\n            return true;\n          }\n        }]\n      }, // first tab end\n      {\n        title: '网络图片',\n        tpl: '<div>\\n                    <input id=\"' + linkUrlId + \"\\\" type=\\\"text\\\" class=\\\"block\\\" placeholder=\\\"\\u56FE\\u7247\\u94FE\\u63A5\\\"/></td>\\n                    <div class=\\\"w-e-button-container\\\">\\n                        <button id=\\\"\" + linkBtnId + \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>\",\n        events: [{\n          selector: '#' + linkBtnId,\n          type: 'click',\n          fn: function fn() {\n            var $linkUrl = $('#' + linkUrlId);\n            var url = $linkUrl.val().trim();\n\n            if (url) {\n              uploadImg.insertLinkImg(url);\n            } // 返回 true 表示函数执行结束之后关闭 panel\n\n\n            return true;\n          }\n        }] // second tab end\n\n      }]; // tabs end\n      // 判断 tabs 的显示\n\n      var tabsConfigResult = [];\n\n      if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n        // 显示“上传图片”\n        tabsConfigResult.push(tabsConfig[0]);\n      }\n\n      if (config.showLinkImg) {\n        // 显示“网络图片”\n        tabsConfigResult.push(tabsConfig[1]);\n      } // 创建 panel 并显示\n\n\n      var panel = new Panel(this, {\n        width: 300,\n        tabs: tabsConfigResult\n      });\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor._selectedImg) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      所有菜单的汇总\n  */\n  // 存储菜单的构造函数\n\n  var MenuConstructors = {};\n  MenuConstructors.bold = Bold;\n  MenuConstructors.head = Head;\n  MenuConstructors.fontSize = FontSize;\n  MenuConstructors.fontName = FontName;\n  MenuConstructors.link = Link;\n  MenuConstructors.italic = Italic;\n  MenuConstructors.redo = Redo;\n  MenuConstructors.strikeThrough = StrikeThrough;\n  MenuConstructors.underline = Underline;\n  MenuConstructors.undo = Undo;\n  MenuConstructors.list = List;\n  MenuConstructors.justify = Justify;\n  MenuConstructors.foreColor = ForeColor;\n  MenuConstructors.backColor = BackColor;\n  MenuConstructors.quote = Quote;\n  MenuConstructors.code = Code;\n  MenuConstructors.emoticon = Emoticon;\n  MenuConstructors.table = Table;\n  MenuConstructors.video = Video;\n  MenuConstructors.image = Image;\n  /*\n      菜单集合\n  */\n  // 构造函数\n\n  function Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n  } // 修改原型\n\n\n  Menus.prototype = {\n    constructor: Menus,\n    // 初始化菜单\n    init: function init() {\n      var _this = this;\n\n      var editor = this.editor;\n      var config = editor.config || {};\n      var configMenus = config.menus || []; // 获取配置中的菜单\n      // 根据配置信息，创建菜单\n\n      configMenus.forEach(function (menuKey) {\n        var MenuConstructor = MenuConstructors[menuKey];\n\n        if (MenuConstructor && typeof MenuConstructor === 'function') {\n          // 创建单个菜单\n          _this.menus[menuKey] = new MenuConstructor(editor);\n        }\n      }); // 添加到菜单栏\n\n      this._addToToolbar(); // 绑定事件\n\n\n      this._bindEvent();\n    },\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n      var editor = this.editor;\n      var $toolbarElem = editor.$toolbarElem;\n      var menus = this.menus;\n      var config = editor.config; // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n\n      var zIndex = config.zIndex + 1;\n      objForEach(menus, function (key, menu) {\n        var $elem = menu.$elem;\n\n        if ($elem) {\n          // 设置 z-index\n          $elem.css('z-index', zIndex);\n          $toolbarElem.append($elem);\n        }\n      });\n    },\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n      var menus = this.menus;\n      var editor = this.editor;\n      objForEach(menus, function (key, menu) {\n        var type = menu.type;\n\n        if (!type) {\n          return;\n        }\n\n        var $elem = menu.$elem;\n        var droplist = menu.droplist;\n        var panel = menu.panel; // 点击类型，例如 bold\n\n        if (type === 'click' && menu.onClick) {\n          $elem.on('click', function (e) {\n            if (editor.selection.getRange() == null) {\n              return;\n            }\n\n            menu.onClick(e);\n          });\n        } // 下拉框，例如 head\n\n\n        if (type === 'droplist' && droplist) {\n          $elem.on('mouseenter', function (e) {\n            if (editor.selection.getRange() == null) {\n              return;\n            } // 显示\n\n\n            droplist.showTimeoutId = setTimeout(function () {\n              droplist.show();\n            }, 200);\n          }).on('mouseleave', function (e) {\n            // 隐藏\n            droplist.hideTimeoutId = setTimeout(function () {\n              droplist.hide();\n            }, 0);\n          });\n        } // 弹框类型，例如 link\n\n\n        if (type === 'panel' && menu.onClick) {\n          $elem.on('click', function (e) {\n            e.stopPropagation();\n\n            if (editor.selection.getRange() == null) {\n              return;\n            } // 在自定义事件中显示 panel\n\n\n            menu.onClick(e);\n          });\n        }\n      });\n    },\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n      var menus = this.menus;\n      objForEach(menus, function (key, menu) {\n        if (menu.tryChangeActive) {\n          setTimeout(function () {\n            menu.tryChangeActive();\n          }, 100);\n        }\n      });\n    }\n  };\n  /*\n      粘贴信息的处理\n  */\n  // 获取粘贴的纯文本\n\n  function getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n\n    if (clipboardData == null) {\n      pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n      pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n  } // 获取粘贴的html\n\n\n  function getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n\n    if (clipboardData == null) {\n      pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n      pasteText = clipboardData.getData('text/plain');\n      pasteHtml = clipboardData.getData('text/html');\n    }\n\n    if (!pasteHtml && pasteText) {\n      pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n\n    if (!pasteHtml) {\n      return;\n    } // 过滤word中状态过来的无用字符\n\n\n    var docSplitHtml = pasteHtml.split('</html>');\n\n    if (docSplitHtml.length === 2) {\n      pasteHtml = docSplitHtml[0];\n    } // 过滤无用标签\n\n\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, ''); // 去掉注释\n\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, ''); // 过滤 data-xxx 属性\n\n    pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n    if (ignoreImg) {\n      // 忽略图片\n      pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n    }\n\n    if (filterStyle) {\n      // 过滤样式\n      pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\n    } else {\n      // 保留样式\n      pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n  } // 获取粘贴的图片文件\n\n\n  function getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n\n    if (txt) {\n      // 有文字，就忽略图片\n      return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n\n    if (!items) {\n      return result;\n    }\n\n    objForEach(items, function (key, value) {\n      var type = value.type;\n\n      if (/image/i.test(type)) {\n        result.push(value.getAsFile());\n      }\n    });\n    return result;\n  }\n  /*\n      编辑区域\n  */\n  // 获取一个 elem.childNodes 的 JSON 数据\n\n\n  function getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n\n    $children.forEach(function (curElem) {\n      var elemResult = void 0;\n      var nodeType = curElem.nodeType; // 文本节点\n\n      if (nodeType === 3) {\n        elemResult = curElem.textContent;\n        elemResult = replaceHtmlSymbol(elemResult);\n      } // 普通 DOM 节点\n\n\n      if (nodeType === 1) {\n        elemResult = {}; // tag\n\n        elemResult.tag = curElem.nodeName.toLowerCase(); // attr\n\n        var attrData = [];\n        var attrList = curElem.attributes || {};\n        var attrListLength = attrList.length || 0;\n\n        for (var i = 0; i < attrListLength; i++) {\n          var attr = attrList[i];\n          attrData.push({\n            name: attr.name,\n            value: attr.value\n          });\n        }\n\n        elemResult.attrs = attrData; // children（递归）\n\n        elemResult.children = getChildrenJSON($(curElem));\n      }\n\n      result.push(elemResult);\n    });\n    return result;\n  } // 构造函数\n\n\n  function Text(editor) {\n    this.editor = editor;\n  } // 修改原型\n\n\n  Text.prototype = {\n    constructor: Text,\n    // 初始化\n    init: function init() {\n      // 绑定事件\n      this._bindEvent();\n    },\n    // 清空内容\n    clear: function clear() {\n      this.html('<p><br></p>');\n    },\n    // 获取 设置 html\n    html: function html(val) {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      var html = void 0;\n\n      if (val == null) {\n        html = $textElem.html(); // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n\n        html = html.replace(/\\u200b/gm, '');\n        return html;\n      } else {\n        $textElem.html(val); // 初始化选取，将光标定位到内容尾部\n\n        editor.initSelection();\n      }\n    },\n    // 获取 JSON\n    getJSON: function getJSON() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      return getChildrenJSON($textElem);\n    },\n    // 获取 设置 text\n    text: function text(val) {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      var text = void 0;\n\n      if (val == null) {\n        text = $textElem.text(); // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n\n        text = text.replace(/\\u200b/gm, '');\n        return text;\n      } else {\n        $textElem.text('<p>' + val + '</p>'); // 初始化选取，将光标定位到内容尾部\n\n        editor.initSelection();\n      }\n    },\n    // 追加内容\n    append: function append(html) {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      $textElem.append($(html)); // 初始化选取，将光标定位到内容尾部\n\n      editor.initSelection();\n    },\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n      // 实时保存选取\n      this._saveRangeRealTime(); // 按回车建时的特殊处理\n\n\n      this._enterKeyHandle(); // 清空时保留 <p><br></p>\n\n\n      this._clearHandle(); // 粘贴事件（粘贴文字，粘贴图片）\n\n\n      this._pasteHandle(); // tab 特殊处理\n\n\n      this._tabHandle(); // img 点击\n\n\n      this._imgHandle(); // 拖拽事件\n\n\n      this._dragHandle();\n    },\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem; // 保存当前的选区\n\n      function saveRange(e) {\n        // 随时保存选区\n        editor.selection.saveRange(); // 更新按钮 ative 状态\n\n        editor.menus.changeActive();\n      } // 按键后保存\n\n\n      $textElem.on('keyup', saveRange);\n      $textElem.on('mousedown', function (e) {\n        // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n        $textElem.on('mouseleave', saveRange);\n      });\n      $textElem.on('mouseup', function (e) {\n        saveRange(); // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n\n        $textElem.off('mouseleave', saveRange);\n      });\n    },\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n\n      function insertEmptyP($selectionElem) {\n        var $p = $('<p><br></p>');\n        $p.insertBefore($selectionElem);\n        editor.selection.createRangeByElem($p, true);\n        editor.selection.restoreSelection();\n        $selectionElem.remove();\n      } // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n\n\n      function pHandle(e) {\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var $parentElem = $selectionElem.parent();\n\n        if ($parentElem.html() === '<code><br></code>') {\n          // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n          // 而且继续回车跳不出去，因此只能特殊处理\n          insertEmptyP($selectionElem);\n          return;\n        }\n\n        if (!$parentElem.equal($textElem)) {\n          // 不是顶级标签\n          return;\n        }\n\n        var nodeName = $selectionElem.getNodeName();\n\n        if (nodeName === 'P') {\n          // 当前的标签是 P ，不用做处理\n          return;\n        }\n\n        if ($selectionElem.text()) {\n          // 有内容，不做处理\n          return;\n        } // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n\n\n        insertEmptyP($selectionElem);\n      }\n\n      $textElem.on('keyup', function (e) {\n        if (e.keyCode !== 13) {\n          // 不是回车键\n          return;\n        } // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n\n\n        pHandle(e);\n      }); // <pre><code></code></pre> 回车时 特殊处理\n\n      function codeHandle(e) {\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionElem) {\n          return;\n        }\n\n        var $parentElem = $selectionElem.parent();\n        var selectionNodeName = $selectionElem.getNodeName();\n        var parentNodeName = $parentElem.getNodeName();\n\n        if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n          // 不符合要求 忽略\n          return;\n        }\n\n        if (!editor.cmd.queryCommandSupported('insertHTML')) {\n          // 必须原生支持 insertHTML 命令\n          return;\n        } // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n\n\n        if (editor._willBreakCode === true) {\n          // 此时可以跳出代码块\n          // 插入 <p> ，并将选取定位到 <p>\n          var $p = $('<p><br></p>');\n          $p.insertAfter($parentElem);\n          editor.selection.createRangeByElem($p, true);\n          editor.selection.restoreSelection(); // 修改状态\n\n          editor._willBreakCode = false;\n          e.preventDefault();\n          return;\n        }\n\n        var _startOffset = editor.selection.getRange().startOffset; // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n\n        editor.cmd.do('insertHTML', '\\n');\n        editor.selection.saveRange();\n\n        if (editor.selection.getRange().startOffset === _startOffset) {\n          // 没起作用，再来一遍\n          editor.cmd.do('insertHTML', '\\n');\n        }\n\n        var codeLength = $selectionElem.html().length;\n\n        if (editor.selection.getRange().startOffset + 1 === codeLength) {\n          // 说明光标在代码最后的位置，执行了回车操作\n          // 记录下来，以便下次回车时候跳出 code\n          editor._willBreakCode = true;\n        } // 阻止默认行为\n\n\n        e.preventDefault();\n      }\n\n      $textElem.on('keydown', function (e) {\n        if (e.keyCode !== 13) {\n          // 不是回车键\n          // 取消即将跳转代码块的记录\n          editor._willBreakCode = false;\n          return;\n        } // <pre><code></code></pre> 回车时 特殊处理\n\n\n        codeHandle(e);\n      });\n    },\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      $textElem.on('keydown', function (e) {\n        if (e.keyCode !== 8) {\n          return;\n        }\n\n        var txtHtml = $textElem.html().toLowerCase().trim();\n\n        if (txtHtml === '<p><br></p>') {\n          // 最后剩下一个空行，就不再删除了\n          e.preventDefault();\n          return;\n        }\n      });\n      $textElem.on('keyup', function (e) {\n        if (e.keyCode !== 8) {\n          return;\n        }\n\n        var $p = void 0;\n        var txtHtml = $textElem.html().toLowerCase().trim(); // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n\n        if (!txtHtml || txtHtml === '<br>') {\n          // 内容空了\n          $p = $('<p><br/></p>');\n          $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n\n          $textElem.append($p);\n          editor.selection.createRangeByElem($p, false, true);\n          editor.selection.restoreSelection();\n        }\n      });\n    },\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n      var editor = this.editor;\n      var config = editor.config;\n      var pasteFilterStyle = config.pasteFilterStyle;\n      var pasteTextHandle = config.pasteTextHandle;\n      var ignoreImg = config.pasteIgnoreImg;\n      var $textElem = editor.$textElem; // 粘贴图片、文本的事件，每次只能执行一个\n      // 判断该次粘贴事件是否可以执行\n\n      var pasteTime = 0;\n\n      function canDo() {\n        var now = Date.now();\n        var flag = false;\n\n        if (now - pasteTime >= 100) {\n          // 间隔大于 100 ms ，可以执行\n          flag = true;\n        }\n\n        pasteTime = now;\n        return flag;\n      }\n\n      function resetTime() {\n        pasteTime = 0;\n      } // 粘贴文字\n\n\n      $textElem.on('paste', function (e) {\n        if (UA.isIE()) {\n          return;\n        } else {\n          // 阻止默认行为，使用 execCommand 的粘贴命令\n          e.preventDefault();\n        } // 粘贴图片和文本，只能同时使用一个\n\n\n        if (!canDo()) {\n          return;\n        } // 获取粘贴的文字\n\n\n        var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n        var pasteText = getPasteText(e);\n        pasteText = pasteText.replace(/\\n/gm, '<br>');\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionElem) {\n          return;\n        }\n\n        var nodeName = $selectionElem.getNodeName(); // code 中只能粘贴纯文本\n\n        if (nodeName === 'CODE' || nodeName === 'PRE') {\n          if (pasteTextHandle && isFunction(pasteTextHandle)) {\n            // 用户自定义过滤处理粘贴内容\n            pasteText = '' + (pasteTextHandle(pasteText) || '');\n          }\n\n          editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n          return;\n        } // 先放开注释，有问题再追查 ————\n        // // 表格中忽略，可能会出现异常问题\n        // if (nodeName === 'TD' || nodeName === 'TH') {\n        //     return\n        // }\n\n\n        if (!pasteHtml) {\n          // 没有内容，可继续执行下面的图片粘贴\n          resetTime();\n          return;\n        }\n\n        try {\n          // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n          // 因此执行 insertHTML 会报错\n          if (pasteTextHandle && isFunction(pasteTextHandle)) {\n            // 用户自定义过滤处理粘贴内容\n            pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n          }\n\n          editor.cmd.do('insertHTML', pasteHtml);\n        } catch (ex) {\n          // 此时使用 pasteText 来兼容一下\n          if (pasteTextHandle && isFunction(pasteTextHandle)) {\n            // 用户自定义过滤处理粘贴内容\n            pasteText = '' + (pasteTextHandle(pasteText) || '');\n          }\n\n          editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n        }\n      }); // 粘贴图片\n\n      $textElem.on('paste', function (e) {\n        if (UA.isIE()) {\n          return;\n        } else {\n          e.preventDefault();\n        } // 粘贴图片和文本，只能同时使用一个\n\n\n        if (!canDo()) {\n          return;\n        } // 获取粘贴的图片\n\n\n        var pasteFiles = getPasteImgs(e);\n\n        if (!pasteFiles || !pasteFiles.length) {\n          return;\n        } // 获取当前的元素\n\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionElem) {\n          return;\n        }\n\n        var nodeName = $selectionElem.getNodeName(); // code 中粘贴忽略\n\n        if (nodeName === 'CODE' || nodeName === 'PRE') {\n          return;\n        } // 上传图片\n\n\n        var uploadImg = editor.uploadImg;\n        uploadImg.uploadImg(pasteFiles);\n      });\n    },\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      $textElem.on('keydown', function (e) {\n        if (e.keyCode !== 9) {\n          return;\n        }\n\n        if (!editor.cmd.queryCommandSupported('insertHTML')) {\n          // 必须原生支持 insertHTML 命令\n          return;\n        }\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionElem) {\n          return;\n        }\n\n        var $parentElem = $selectionElem.parent();\n        var selectionNodeName = $selectionElem.getNodeName();\n        var parentNodeName = $parentElem.getNodeName();\n\n        if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n          // <pre><code> 里面\n          editor.cmd.do('insertHTML', '    ');\n        } else {\n          // 普通文字\n          editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n        }\n\n        e.preventDefault();\n      });\n    },\n    // img 点击\n    _imgHandle: function _imgHandle() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem; // 为图片增加 selected 样式\n\n      $textElem.on('click', 'img', function (e) {\n        var img = this;\n        var $img = $(img);\n\n        if ($img.attr('data-w-e') === '1') {\n          // 是表情图片，忽略\n          return;\n        } // 记录当前点击过的图片\n\n\n        editor._selectedImg = $img; // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n\n        editor.selection.createRangeByElem($img);\n        editor.selection.restoreSelection();\n      }); // 去掉图片的 selected 样式\n\n      $textElem.on('click  keyup', function (e) {\n        if (e.target.matches('img')) {\n          // 点击的是图片，忽略\n          return;\n        } // 删除记录\n\n\n        editor._selectedImg = null;\n      });\n    },\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n      var editor = this.editor; // 禁用 document 拖拽事件\n\n      var $document = $(document);\n      $document.on('dragleave drop dragenter dragover', function (e) {\n        e.preventDefault();\n      }); // 添加编辑区域拖拽事件\n\n      var $textElem = editor.$textElem;\n      $textElem.on('drop', function (e) {\n        e.preventDefault();\n        var files = e.dataTransfer && e.dataTransfer.files;\n\n        if (!files || !files.length) {\n          return;\n        } // 上传图片\n\n\n        var uploadImg = editor.uploadImg;\n        uploadImg.uploadImg(files);\n      });\n    }\n  };\n  /*\n      命令，封装 document.execCommand\n  */\n  // 构造函数\n\n  function Command(editor) {\n    this.editor = editor;\n  } // 修改原型\n\n\n  Command.prototype = {\n    constructor: Command,\n    // 执行命令\n    do: function _do(name, value) {\n      var editor = this.editor; // 使用 styleWithCSS\n\n      if (!editor._useStyleWithCSS) {\n        document.execCommand('styleWithCSS', null, true);\n        editor._useStyleWithCSS = true;\n      } // 如果无选区，忽略\n\n\n      if (!editor.selection.getRange()) {\n        return;\n      } // 恢复选取\n\n\n      editor.selection.restoreSelection(); // 执行\n\n      var _name = '_' + name;\n\n      if (this[_name]) {\n        // 有自定义事件\n        this[_name](value);\n      } else {\n        // 默认 command\n        this._execCommand(name, value);\n      } // 修改菜单状态\n\n\n      editor.menus.changeActive(); // 最后，恢复选取保证光标在原来的位置闪烁\n\n      editor.selection.saveRange();\n      editor.selection.restoreSelection(); // 触发 onchange\n\n      editor.change && editor.change();\n    },\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n      var editor = this.editor;\n      var range = editor.selection.getRange();\n\n      if (this.queryCommandSupported('insertHTML')) {\n        // W3C\n        this._execCommand('insertHTML', html);\n      } else if (range.insertNode) {\n        // IE\n        range.deleteContents();\n        range.insertNode($(html)[0]);\n      } else if (range.pasteHTML) {\n        // IE <= 10\n        range.pasteHTML(html);\n      }\n    },\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n      var editor = this.editor;\n      var range = editor.selection.getRange();\n\n      if (range.insertNode) {\n        range.deleteContents();\n        range.insertNode($elem[0]);\n      }\n    },\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n      document.execCommand(name, false, value);\n    },\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n      return document.queryCommandValue(name);\n    },\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n      return document.queryCommandState(name);\n    },\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n      return document.queryCommandSupported(name);\n    }\n  };\n  /*\n      selection range API\n  */\n  // 构造函数\n\n  function API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n  } // 修改原型\n\n\n  API.prototype = {\n    constructor: API,\n    // 获取 range 对象\n    getRange: function getRange() {\n      return this._currentRange;\n    },\n    // 保存选区\n    saveRange: function saveRange(_range) {\n      if (_range) {\n        // 保存已有选区\n        this._currentRange = _range;\n        return;\n      } // 获取当前的选区\n\n\n      var selection = window.getSelection();\n\n      if (selection.rangeCount === 0) {\n        return;\n      }\n\n      var range = selection.getRangeAt(0); // 判断选区内容是否在编辑内容之内\n\n      var $containerElem = this.getSelectionContainerElem(range);\n\n      if (!$containerElem) {\n        return;\n      } // 判断选区内容是否在不可编辑区域之内\n\n\n      if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n        return;\n      }\n\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n\n      if ($textElem.isContain($containerElem)) {\n        // 是编辑内容之内的\n        this._currentRange = range;\n      }\n    },\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n      if (toStart == null) {\n        // 默认为 false\n        toStart = false;\n      }\n\n      var range = this._currentRange;\n\n      if (range) {\n        range.collapse(toStart);\n      }\n    },\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n      var range = this._currentRange;\n\n      if (range) {\n        return this._currentRange.toString();\n      } else {\n        return '';\n      }\n    },\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n      range = range || this._currentRange;\n      var elem = void 0;\n\n      if (range) {\n        elem = range.commonAncestorContainer;\n        return $(elem.nodeType === 1 ? elem : elem.parentNode);\n      }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n      range = range || this._currentRange;\n      var elem = void 0;\n\n      if (range) {\n        elem = range.startContainer;\n        return $(elem.nodeType === 1 ? elem : elem.parentNode);\n      }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n      range = range || this._currentRange;\n      var elem = void 0;\n\n      if (range) {\n        elem = range.endContainer;\n        return $(elem.nodeType === 1 ? elem : elem.parentNode);\n      }\n    },\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n      var range = this._currentRange;\n\n      if (range && range.startContainer) {\n        if (range.startContainer === range.endContainer) {\n          if (range.startOffset === range.endOffset) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n      var selection = window.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(this._currentRange);\n    },\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n      var editor = this.editor;\n      var range = this.getRange();\n      var $elem = void 0;\n\n      if (!range) {\n        // 当前无 range\n        return;\n      }\n\n      if (!this.isSelectionEmpty()) {\n        // 当前选区必须没有内容才可以\n        return;\n      }\n\n      try {\n        // 目前只支持 webkit 内核\n        if (UA.isWebkit()) {\n          // 插入 &#8203\n          editor.cmd.do('insertHTML', '&#8203;'); // 修改 offset 位置\n\n          range.setEnd(range.endContainer, range.endOffset + 1); // 存储\n\n          this.saveRange(range);\n        } else {\n          $elem = $('<strong>&#8203;</strong>');\n          editor.cmd.do('insertElem', $elem);\n          this.createRangeByElem($elem, true);\n        }\n      } catch (ex) {// 部分情况下会报错，兼容一下\n      }\n    },\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n      // $elem - 经过封装的 elem\n      // toStart - true 开始位置，false 结束位置\n      // isContent - 是否选中Elem的内容\n      if (!$elem.length) {\n        return;\n      }\n\n      var elem = $elem[0];\n      var range = document.createRange();\n\n      if (isContent) {\n        range.selectNodeContents(elem);\n      } else {\n        range.selectNode(elem);\n      }\n\n      if (typeof toStart === 'boolean') {\n        range.collapse(toStart);\n      } // 存储 range\n\n\n      this.saveRange(range);\n    }\n  };\n  /*\n      上传进度条\n  */\n\n  function Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n  }\n\n  Progress.prototype = {\n    constructor: Progress,\n    show: function show(progress) {\n      var _this = this; // 状态处理\n\n\n      if (this._isShow) {\n        return;\n      }\n\n      this._isShow = true; // 渲染\n\n      var $bar = this.$bar;\n\n      if (!this._isRender) {\n        var $textContainer = this.$textContainer;\n        $textContainer.append($bar);\n      } else {\n        this._isRender = true;\n      } // 改变进度（节流，100ms 渲染一次）\n\n\n      if (Date.now() - this._time > 100) {\n        if (progress <= 1) {\n          $bar.css('width', progress * 100 + '%');\n          this._time = Date.now();\n        }\n      } // 隐藏\n\n\n      var timeoutId = this._timeoutId;\n\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n\n      timeoutId = setTimeout(function () {\n        _this._hide();\n      }, 500);\n    },\n    _hide: function _hide() {\n      var $bar = this.$bar;\n      $bar.remove(); // 修改状态\n\n      this._time = 0;\n      this._isShow = false;\n      this._isRender = false;\n    }\n  };\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n  /*\n      上传图片\n  */\n  // 构造函数\n\n\n  function UploadImg(editor) {\n    this.editor = editor;\n  } // 原型\n\n\n  UploadImg.prototype = {\n    constructor: UploadImg,\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n      var editor = this.editor;\n      var debug = editor.config.debug;\n      var customAlert = editor.config.customAlert;\n\n      if (debug) {\n        throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n      } else {\n        if (customAlert && typeof customAlert === 'function') {\n          customAlert(alertInfo);\n        } else {\n          alert(alertInfo);\n        }\n      }\n    },\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n      var _this2 = this;\n\n      if (!link) {\n        return;\n      }\n\n      var editor = this.editor;\n      var config = editor.config; // 校验格式\n\n      var linkImgCheck = config.linkImgCheck;\n      var checkResult = void 0;\n\n      if (linkImgCheck && typeof linkImgCheck === 'function') {\n        checkResult = linkImgCheck(link);\n\n        if (typeof checkResult === 'string') {\n          // 校验失败，提示信息\n          alert(checkResult);\n          return;\n        }\n      }\n\n      editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>'); // 验证图片 url 是否有效，无效的话给出提示\n\n      var img = document.createElement('img');\n\n      img.onload = function () {\n        var callback = config.linkImgCallback;\n\n        if (callback && typeof callback === 'function') {\n          callback(link);\n        }\n\n        img = null;\n      };\n\n      img.onerror = function () {\n        img = null; // 无法成功下载图片\n\n        _this2._alert('插入图片错误', \"wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \\\"\" + link + \"\\\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25\");\n\n        return;\n      };\n\n      img.onabort = function () {\n        img = null;\n      };\n\n      img.src = link;\n    },\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n      var _this3 = this;\n\n      if (!files || !files.length) {\n        return;\n      } // ------------------------------ 获取配置信息 ------------------------------\n\n\n      var editor = this.editor;\n      var config = editor.config;\n      var uploadImgServer = config.uploadImgServer;\n      var uploadImgShowBase64 = config.uploadImgShowBase64;\n      var maxSize = config.uploadImgMaxSize;\n      var maxSizeM = maxSize / 1024 / 1024;\n      var maxLength = config.uploadImgMaxLength || 10000;\n      var uploadFileName = config.uploadFileName || '';\n      var uploadImgParams = config.uploadImgParams || {};\n      var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n      var uploadImgHeaders = config.uploadImgHeaders || {};\n      var hooks = config.uploadImgHooks || {};\n      var timeout = config.uploadImgTimeout || 3000;\n      var withCredentials = config.withCredentials;\n\n      if (withCredentials == null) {\n        withCredentials = false;\n      }\n\n      var customUploadImg = config.customUploadImg;\n\n      if (!customUploadImg) {\n        // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n        if (!uploadImgServer && !uploadImgShowBase64) {\n          return;\n        }\n      } // ------------------------------ 验证文件信息 ------------------------------\n\n\n      var resultFiles = [];\n      var errInfo = [];\n      arrForEach(files, function (file) {\n        var name = file.name;\n        var size = file.size; // chrome 低版本 name === undefined\n\n        if (!name || !size) {\n          return;\n        }\n\n        if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n          // 后缀名不合法，不是图片\n          errInfo.push(\"\\u3010\" + name + \"\\u3011\\u4E0D\\u662F\\u56FE\\u7247\");\n          return;\n        }\n\n        if (maxSize < size) {\n          // 上传图片过大\n          errInfo.push(\"\\u3010\" + name + \"\\u3011\\u5927\\u4E8E \" + maxSizeM + 'M');\n          return;\n        } // 验证通过的加入结果列表\n\n\n        resultFiles.push(file);\n      }); // 抛出验证信息\n\n      if (errInfo.length) {\n        this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n\n        return;\n      }\n\n      if (resultFiles.length > maxLength) {\n        this._alert('一次最多上传' + maxLength + '张图片');\n\n        return;\n      } // ------------------------------ 自定义上传 ------------------------------\n\n\n      if (customUploadImg && typeof customUploadImg === 'function') {\n        customUploadImg(resultFiles, this.insertLinkImg.bind(this)); // 阻止以下代码执行\n\n        return;\n      } // 添加图片数据\n\n\n      var formdata = new FormData();\n      arrForEach(resultFiles, function (file) {\n        var name = uploadFileName || file.name;\n        formdata.append(name, file);\n      }); // ------------------------------ 上传图片 ------------------------------\n\n      if (uploadImgServer && typeof uploadImgServer === 'string') {\n        // 添加参数\n        var uploadImgServerArr = uploadImgServer.split('#');\n        uploadImgServer = uploadImgServerArr[0];\n        var uploadImgServerHash = uploadImgServerArr[1] || '';\n        objForEach(uploadImgParams, function (key, val) {\n          // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n          // val = encodeURIComponent(val)\n          // 第一，将参数拼接到 url 中\n          if (uploadImgParamsWithUrl) {\n            if (uploadImgServer.indexOf('?') > 0) {\n              uploadImgServer += '&';\n            } else {\n              uploadImgServer += '?';\n            }\n\n            uploadImgServer = uploadImgServer + key + '=' + val;\n          } // 第二，将参数添加到 formdata 中\n\n\n          formdata.append(key, val);\n        });\n\n        if (uploadImgServerHash) {\n          uploadImgServer += '#' + uploadImgServerHash;\n        } // 定义 xhr\n\n\n        var xhr = new XMLHttpRequest();\n        xhr.open('POST', uploadImgServer); // 设置超时\n\n        xhr.timeout = timeout;\n\n        xhr.ontimeout = function () {\n          // hook - timeout\n          if (hooks.timeout && typeof hooks.timeout === 'function') {\n            hooks.timeout(xhr, editor);\n          }\n\n          _this3._alert('上传图片超时');\n        }; // 监控 progress\n\n\n        if (xhr.upload) {\n          xhr.upload.onprogress = function (e) {\n            var percent = void 0; // 进度条\n\n            var progressBar = new Progress(editor);\n\n            if (e.lengthComputable) {\n              percent = e.loaded / e.total;\n              progressBar.show(percent);\n            }\n          };\n        } // 返回数据\n\n\n        xhr.onreadystatechange = function () {\n          var result = void 0;\n\n          if (xhr.readyState === 4) {\n            if (xhr.status < 200 || xhr.status >= 300) {\n              // hook - error\n              if (hooks.error && typeof hooks.error === 'function') {\n                hooks.error(xhr, editor);\n              } // xhr 返回状态错误\n\n\n              _this3._alert('上传图片发生错误', \"\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F \" + xhr.status);\n\n              return;\n            }\n\n            result = xhr.responseText;\n\n            if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n              try {\n                result = JSON.parse(result);\n              } catch (ex) {\n                // hook - fail\n                if (hooks.fail && typeof hooks.fail === 'function') {\n                  hooks.fail(xhr, editor, result);\n                }\n\n                _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n\n                return;\n              }\n            }\n\n            if (!hooks.customInsert && result.errno != '0') {\n              // hook - fail\n              if (hooks.fail && typeof hooks.fail === 'function') {\n                hooks.fail(xhr, editor, result);\n              } // 数据错误\n\n\n              _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n            } else {\n              if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                // 使用者自定义插入方法\n                hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n              } else {\n                // 将图片插入编辑器\n                var data = result.data || [];\n                data.forEach(function (link) {\n                  _this3.insertLinkImg(link);\n                });\n              } // hook - success\n\n\n              if (hooks.success && typeof hooks.success === 'function') {\n                hooks.success(xhr, editor, result);\n              }\n            }\n          }\n        }; // hook - before\n\n\n        if (hooks.before && typeof hooks.before === 'function') {\n          var beforeResult = hooks.before(xhr, editor, resultFiles);\n\n          if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n            if (beforeResult.prevent) {\n              // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n              this._alert(beforeResult.msg);\n\n              return;\n            }\n          }\n        } // 自定义 headers\n\n\n        objForEach(uploadImgHeaders, function (key, val) {\n          xhr.setRequestHeader(key, val);\n        }); // 跨域传 cookie\n\n        xhr.withCredentials = withCredentials; // 发送请求\n\n        xhr.send(formdata); // 注意，要 return 。不去操作接下来的 base64 显示方式\n\n        return;\n      } // ------------------------------ 显示 base64 格式 ------------------------------\n\n\n      if (uploadImgShowBase64) {\n        arrForEach(files, function (file) {\n          var _this = _this3;\n          var reader = new FileReader();\n          reader.readAsDataURL(file);\n\n          reader.onload = function () {\n            _this.insertLinkImg(this.result);\n          };\n        });\n      }\n    }\n  };\n  /*\n      编辑器构造函数\n  */\n  // id，累加\n\n  var editorId = 1; // 构造函数\n\n  function Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n      // 没有传入任何参数，报错\n      throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    } // id，用以区分单个页面不同的编辑器对象\n\n\n    this.id = 'wangEditor-' + editorId++;\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector; // 自定义配置\n\n    this.customConfig = {};\n  } // 修改原型\n\n\n  Editor.prototype = {\n    constructor: Editor,\n    // 初始化配置\n    _initConfig: function _initConfig() {\n      // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n      var target = {};\n      this.config = Object.assign(target, config, this.customConfig); // 将语言配置，生成正则表达式\n\n      var langConfig = this.config.lang || {};\n      var langArgs = [];\n      objForEach(langConfig, function (key, val) {\n        // key 即需要生成正则表达式的规则，如“插入链接”\n        // val 即需要被替换成的语言，如“insert link”\n        langArgs.push({\n          reg: new RegExp(key, 'img'),\n          val: val\n        });\n      });\n      this.config.langArgs = langArgs;\n    },\n    // 初始化 DOM\n    _initDom: function _initDom() {\n      var _this = this;\n\n      var toolbarSelector = this.toolbarSelector;\n      var $toolbarSelector = $(toolbarSelector);\n      var textSelector = this.textSelector;\n      var config$$1 = this.config;\n      var zIndex = config$$1.zIndex; // 定义变量\n\n      var $toolbarElem = void 0,\n          $textContainerElem = void 0,\n          $textElem = void 0,\n          $children = void 0;\n\n      if (textSelector == null) {\n        // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n        $toolbarElem = $('<div></div>');\n        $textContainerElem = $('<div></div>'); // 将编辑器区域原有的内容，暂存起来\n\n        $children = $toolbarSelector.children(); // 添加到 DOM 结构中\n\n        $toolbarSelector.append($toolbarElem).append($textContainerElem); // 自行创建的，需要配置默认的样式\n\n        $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n        $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n      } else {\n        // toolbar 和 text 的选择器都有值，记录属性\n        $toolbarElem = $toolbarSelector;\n        $textContainerElem = $(textSelector); // 将编辑器区域原有的内容，暂存起来\n\n        $children = $textContainerElem.children();\n      } // 编辑区域\n\n\n      $textElem = $('<div></div>');\n      $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%'); // 初始化编辑区域内容\n\n      if ($children && $children.length) {\n        $textElem.append($children);\n      } else {\n        $textElem.append($('<p><br></p>'));\n      } // 编辑区域加入DOM\n\n\n      $textContainerElem.append($textElem); // 设置通用的 class\n\n      $toolbarElem.addClass('w-e-toolbar');\n      $textContainerElem.addClass('w-e-text-container');\n      $textContainerElem.css('z-index', zIndex);\n      $textElem.addClass('w-e-text'); // 添加 ID\n\n      var toolbarElemId = getRandom('toolbar-elem');\n      $toolbarElem.attr('id', toolbarElemId);\n      var textElemId = getRandom('text-elem');\n      $textElem.attr('id', textElemId); // 记录属性\n\n      this.$toolbarElem = $toolbarElem;\n      this.$textContainerElem = $textContainerElem;\n      this.$textElem = $textElem;\n      this.toolbarElemId = toolbarElemId;\n      this.textElemId = textElemId; // 记录输入法的开始和结束\n\n      var compositionEnd = true;\n      $textContainerElem.on('compositionstart', function () {\n        // 输入法开始输入\n        compositionEnd = false;\n      });\n      $textContainerElem.on('compositionend', function () {\n        // 输入法结束输入\n        compositionEnd = true;\n      }); // 绑定 onchange\n\n      $textContainerElem.on('click keyup', function () {\n        // 输入法结束才出发 onchange\n        compositionEnd && _this.change && _this.change();\n      });\n      $toolbarElem.on('click', function () {\n        this.change && this.change();\n      }); //绑定 onfocus 与 onblur 事件\n\n      if (config$$1.onfocus || config$$1.onblur) {\n        // 当前编辑器是否是焦点状态\n        this.isFocus = false;\n        $(document).on('click', function (e) {\n          //判断当前点击元素是否在编辑器内\n          var isChild = $textElem.isContain($(e.target)); //判断当前点击元素是否为工具栏\n\n          var isToolbar = $toolbarElem.isContain($(e.target));\n          var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n          if (!isChild) {\n            //若为选择工具栏中的功能，则不视为成blur操作\n            if (isToolbar && !isMenu) {\n              return;\n            }\n\n            if (_this.isFocus) {\n              _this.onblur && _this.onblur();\n            }\n\n            _this.isFocus = false;\n          } else {\n            if (!_this.isFocus) {\n              _this.onfocus && _this.onfocus();\n            }\n\n            _this.isFocus = true;\n          }\n        });\n      }\n    },\n    // 封装 command\n    _initCommand: function _initCommand() {\n      this.cmd = new Command(this);\n    },\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n      this.selection = new API(this);\n    },\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n      this.uploadImg = new UploadImg(this);\n    },\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n      this.menus = new Menus(this);\n      this.menus.init();\n    },\n    // 添加 text 区域\n    _initText: function _initText() {\n      this.txt = new Text(this);\n      this.txt.init();\n    },\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n      var $textElem = this.$textElem;\n      var $children = $textElem.children();\n\n      if (!$children.length) {\n        // 如果编辑器区域无内容，添加一个空行，重新设置选区\n        $textElem.append($('<p><br></p>'));\n        this.initSelection();\n        return;\n      }\n\n      var $last = $children.last();\n\n      if (newLine) {\n        // 新增一个空行\n        var html = $last.html().toLowerCase();\n        var nodeName = $last.getNodeName();\n\n        if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n          // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n          $textElem.append($('<p><br></p>'));\n          this.initSelection();\n          return;\n        }\n      }\n\n      this.selection.createRangeByElem($last, false, true);\n      this.selection.restoreSelection();\n    },\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n      // -------- 绑定 onchange 事件 --------\n      var onChangeTimeoutId = 0;\n      var beforeChangeHtml = this.txt.html();\n      var config$$1 = this.config; // onchange 触发延迟时间\n\n      var onchangeTimeout = config$$1.onchangeTimeout;\n      onchangeTimeout = parseInt(onchangeTimeout, 10);\n\n      if (!onchangeTimeout || onchangeTimeout <= 0) {\n        onchangeTimeout = 200;\n      }\n\n      var onchange = config$$1.onchange;\n\n      if (onchange && typeof onchange === 'function') {\n        // 触发 change 的有三个场景：\n        // 1. $textContainerElem.on('click keyup')\n        // 2. $toolbarElem.on('click')\n        // 3. editor.cmd.do()\n        this.change = function () {\n          // 判断是否有变化\n          var currentHtml = this.txt.html();\n\n          if (currentHtml.length === beforeChangeHtml.length) {\n            // 需要比较每一个字符\n            if (currentHtml === beforeChangeHtml) {\n              return;\n            }\n          } // 执行，使用节流\n\n\n          if (onChangeTimeoutId) {\n            clearTimeout(onChangeTimeoutId);\n          }\n\n          onChangeTimeoutId = setTimeout(function () {\n            // 触发配置的 onchange 函数\n            onchange(currentHtml);\n            beforeChangeHtml = currentHtml;\n          }, onchangeTimeout);\n        };\n      } // -------- 绑定 onblur 事件 --------\n\n\n      var onblur = config$$1.onblur;\n\n      if (onblur && typeof onblur === 'function') {\n        this.onblur = function () {\n          var currentHtml = this.txt.html();\n          onblur(currentHtml);\n        };\n      } // -------- 绑定 onfocus 事件 --------\n\n\n      var onfocus = config$$1.onfocus;\n\n      if (onfocus && typeof onfocus === 'function') {\n        this.onfocus = function () {\n          onfocus();\n        };\n      }\n    },\n    // 创建编辑器\n    create: function create() {\n      // 初始化配置信息\n      this._initConfig(); // 初始化 DOM\n\n\n      this._initDom(); // 封装 command API\n\n\n      this._initCommand(); // 封装 selection range API\n\n\n      this._initSelectionAPI(); // 添加 text\n\n\n      this._initText(); // 初始化菜单\n\n\n      this._initMenus(); // 添加 图片上传\n\n\n      this._initUploadImg(); // 初始化选区，将光标定位到内容尾部\n\n\n      this.initSelection(true); // 绑定事件\n\n      this._bindEvent();\n    },\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n      $.offAll();\n    }\n  }; // 检验是否浏览器环境\n\n  try {\n    document;\n  } catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n  } // polyfill\n\n\n  polyfill(); // 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\n\n  var inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}'; // 将 css 代码添加到 <style> 中\n\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  style.innerHTML = inlinecss;\n  document.getElementsByTagName('HEAD').item(0).appendChild(style); // 返回\n\n  var index = window.wangEditor || Editor;\n  return index;\n});","/**\n * @ignore\n * some key-codes definition and utils from closure-library\n * @author yiminghe@gmail.com\n */\nvar KeyCode = {\n  /**\n   * MAC_ENTER\n   */\n  MAC_ENTER: 3,\n\n  /**\n   * BACKSPACE\n   */\n  BACKSPACE: 8,\n\n  /**\n   * TAB\n   */\n  TAB: 9,\n\n  /**\n   * NUMLOCK on FF/Safari Mac\n   */\n  NUM_CENTER: 12,\n\n  /**\n   * ENTER\n   */\n  ENTER: 13,\n\n  /**\n   * SHIFT\n   */\n  SHIFT: 16,\n\n  /**\n   * CTRL\n   */\n  CTRL: 17,\n\n  /**\n   * ALT\n   */\n  ALT: 18,\n\n  /**\n   * PAUSE\n   */\n  PAUSE: 19,\n\n  /**\n   * CAPS_LOCK\n   */\n  CAPS_LOCK: 20,\n\n  /**\n   * ESC\n   */\n  ESC: 27,\n\n  /**\n   * SPACE\n   */\n  SPACE: 32,\n\n  /**\n   * PAGE_UP\n   */\n  PAGE_UP: 33,\n\n  /**\n   * PAGE_DOWN\n   */\n  PAGE_DOWN: 34,\n\n  /**\n   * END\n   */\n  END: 35,\n\n  /**\n   * HOME\n   */\n  HOME: 36,\n\n  /**\n   * LEFT\n   */\n  LEFT: 37,\n\n  /**\n   * UP\n   */\n  UP: 38,\n\n  /**\n   * RIGHT\n   */\n  RIGHT: 39,\n\n  /**\n   * DOWN\n   */\n  DOWN: 40,\n\n  /**\n   * PRINT_SCREEN\n   */\n  PRINT_SCREEN: 44,\n\n  /**\n   * INSERT\n   */\n  INSERT: 45,\n\n  /**\n   * DELETE\n   */\n  DELETE: 46,\n\n  /**\n   * ZERO\n   */\n  ZERO: 48,\n\n  /**\n   * ONE\n   */\n  ONE: 49,\n\n  /**\n   * TWO\n   */\n  TWO: 50,\n\n  /**\n   * THREE\n   */\n  THREE: 51,\n\n  /**\n   * FOUR\n   */\n  FOUR: 52,\n\n  /**\n   * FIVE\n   */\n  FIVE: 53,\n\n  /**\n   * SIX\n   */\n  SIX: 54,\n\n  /**\n   * SEVEN\n   */\n  SEVEN: 55,\n\n  /**\n   * EIGHT\n   */\n  EIGHT: 56,\n\n  /**\n   * NINE\n   */\n  NINE: 57,\n\n  /**\n   * QUESTION_MARK\n   */\n  QUESTION_MARK: 63,\n\n  /**\n   * A\n   */\n  A: 65,\n\n  /**\n   * B\n   */\n  B: 66,\n\n  /**\n   * C\n   */\n  C: 67,\n\n  /**\n   * D\n   */\n  D: 68,\n\n  /**\n   * E\n   */\n  E: 69,\n\n  /**\n   * F\n   */\n  F: 70,\n\n  /**\n   * G\n   */\n  G: 71,\n\n  /**\n   * H\n   */\n  H: 72,\n\n  /**\n   * I\n   */\n  I: 73,\n\n  /**\n   * J\n   */\n  J: 74,\n\n  /**\n   * K\n   */\n  K: 75,\n\n  /**\n   * L\n   */\n  L: 76,\n\n  /**\n   * M\n   */\n  M: 77,\n\n  /**\n   * N\n   */\n  N: 78,\n\n  /**\n   * O\n   */\n  O: 79,\n\n  /**\n   * P\n   */\n  P: 80,\n\n  /**\n   * Q\n   */\n  Q: 81,\n\n  /**\n   * R\n   */\n  R: 82,\n\n  /**\n   * S\n   */\n  S: 83,\n\n  /**\n   * T\n   */\n  T: 84,\n\n  /**\n   * U\n   */\n  U: 85,\n\n  /**\n   * V\n   */\n  V: 86,\n\n  /**\n   * W\n   */\n  W: 87,\n\n  /**\n   * X\n   */\n  X: 88,\n\n  /**\n   * Y\n   */\n  Y: 89,\n\n  /**\n   * Z\n   */\n  Z: 90,\n\n  /**\n   * META\n   */\n  META: 91,\n\n  /**\n   * WIN_KEY_RIGHT\n   */\n  WIN_KEY_RIGHT: 92,\n\n  /**\n   * CONTEXT_MENU\n   */\n  CONTEXT_MENU: 93,\n\n  /**\n   * NUM_ZERO\n   */\n  NUM_ZERO: 96,\n\n  /**\n   * NUM_ONE\n   */\n  NUM_ONE: 97,\n\n  /**\n   * NUM_TWO\n   */\n  NUM_TWO: 98,\n\n  /**\n   * NUM_THREE\n   */\n  NUM_THREE: 99,\n\n  /**\n   * NUM_FOUR\n   */\n  NUM_FOUR: 100,\n\n  /**\n   * NUM_FIVE\n   */\n  NUM_FIVE: 101,\n\n  /**\n   * NUM_SIX\n   */\n  NUM_SIX: 102,\n\n  /**\n   * NUM_SEVEN\n   */\n  NUM_SEVEN: 103,\n\n  /**\n   * NUM_EIGHT\n   */\n  NUM_EIGHT: 104,\n\n  /**\n   * NUM_NINE\n   */\n  NUM_NINE: 105,\n\n  /**\n   * NUM_MULTIPLY\n   */\n  NUM_MULTIPLY: 106,\n\n  /**\n   * NUM_PLUS\n   */\n  NUM_PLUS: 107,\n\n  /**\n   * NUM_MINUS\n   */\n  NUM_MINUS: 109,\n\n  /**\n   * NUM_PERIOD\n   */\n  NUM_PERIOD: 110,\n\n  /**\n   * NUM_DIVISION\n   */\n  NUM_DIVISION: 111,\n\n  /**\n   * F1\n   */\n  F1: 112,\n\n  /**\n   * F2\n   */\n  F2: 113,\n\n  /**\n   * F3\n   */\n  F3: 114,\n\n  /**\n   * F4\n   */\n  F4: 115,\n\n  /**\n   * F5\n   */\n  F5: 116,\n\n  /**\n   * F6\n   */\n  F6: 117,\n\n  /**\n   * F7\n   */\n  F7: 118,\n\n  /**\n   * F8\n   */\n  F8: 119,\n\n  /**\n   * F9\n   */\n  F9: 120,\n\n  /**\n   * F10\n   */\n  F10: 121,\n\n  /**\n   * F11\n   */\n  F11: 122,\n\n  /**\n   * F12\n   */\n  F12: 123,\n\n  /**\n   * NUMLOCK\n   */\n  NUMLOCK: 144,\n\n  /**\n   * SEMICOLON\n   */\n  SEMICOLON: 186,\n\n  /**\n   * DASH\n   */\n  DASH: 189,\n\n  /**\n   * EQUALS\n   */\n  EQUALS: 187,\n\n  /**\n   * COMMA\n   */\n  COMMA: 188,\n\n  /**\n   * PERIOD\n   */\n  PERIOD: 190,\n\n  /**\n   * SLASH\n   */\n  SLASH: 191,\n\n  /**\n   * APOSTROPHE\n   */\n  APOSTROPHE: 192,\n\n  /**\n   * SINGLE_QUOTE\n   */\n  SINGLE_QUOTE: 222,\n\n  /**\n   * OPEN_SQUARE_BRACKET\n   */\n  OPEN_SQUARE_BRACKET: 219,\n\n  /**\n   * BACKSLASH\n   */\n  BACKSLASH: 220,\n\n  /**\n   * CLOSE_SQUARE_BRACKET\n   */\n  CLOSE_SQUARE_BRACKET: 221,\n\n  /**\n   * WIN_KEY\n   */\n  WIN_KEY: 224,\n\n  /**\n   * MAC_FF_META\n   */\n  MAC_FF_META: 224,\n\n  /**\n   * WIN_IME\n   */\n  WIN_IME: 229,\n  // ======================== Function ========================\n\n  /**\n   * whether text and modified key is entered at the same time.\n   */\n  isTextModifyingKeyEvent: function isTextModifyingKeyEvent(e) {\n    var keyCode = e.keyCode;\n\n    if (e.altKey && !e.ctrlKey || e.metaKey || // Function keys don't generate text\n    keyCode >= KeyCode.F1 && keyCode <= KeyCode.F12) {\n      return false;\n    } // The following keys are quite harmless, even in combination with\n    // CTRL, ALT or SHIFT.\n\n\n    switch (keyCode) {\n      case KeyCode.ALT:\n      case KeyCode.CAPS_LOCK:\n      case KeyCode.CONTEXT_MENU:\n      case KeyCode.CTRL:\n      case KeyCode.DOWN:\n      case KeyCode.END:\n      case KeyCode.ESC:\n      case KeyCode.HOME:\n      case KeyCode.INSERT:\n      case KeyCode.LEFT:\n      case KeyCode.MAC_FF_META:\n      case KeyCode.META:\n      case KeyCode.NUMLOCK:\n      case KeyCode.NUM_CENTER:\n      case KeyCode.PAGE_DOWN:\n      case KeyCode.PAGE_UP:\n      case KeyCode.PAUSE:\n      case KeyCode.PRINT_SCREEN:\n      case KeyCode.RIGHT:\n      case KeyCode.SHIFT:\n      case KeyCode.UP:\n      case KeyCode.WIN_KEY:\n      case KeyCode.WIN_KEY_RIGHT:\n        return false;\n\n      default:\n        return true;\n    }\n  },\n\n  /**\n   * whether character is entered.\n   */\n  isCharacterKey: function isCharacterKey(keyCode) {\n    if (keyCode >= KeyCode.ZERO && keyCode <= KeyCode.NINE) {\n      return true;\n    }\n\n    if (keyCode >= KeyCode.NUM_ZERO && keyCode <= KeyCode.NUM_MULTIPLY) {\n      return true;\n    }\n\n    if (keyCode >= KeyCode.A && keyCode <= KeyCode.Z) {\n      return true;\n    } // Safari sends zero key code for non-latin characters.\n\n\n    if (window.navigator.userAgent.indexOf('WebKit') !== -1 && keyCode === 0) {\n      return true;\n    }\n\n    switch (keyCode) {\n      case KeyCode.SPACE:\n      case KeyCode.QUESTION_MARK:\n      case KeyCode.NUM_PLUS:\n      case KeyCode.NUM_MINUS:\n      case KeyCode.NUM_PERIOD:\n      case KeyCode.NUM_DIVISION:\n      case KeyCode.SEMICOLON:\n      case KeyCode.DASH:\n      case KeyCode.EQUALS:\n      case KeyCode.COMMA:\n      case KeyCode.PERIOD:\n      case KeyCode.SLASH:\n      case KeyCode.APOSTROPHE:\n      case KeyCode.SINGLE_QUOTE:\n      case KeyCode.OPEN_SQUARE_BRACKET:\n      case KeyCode.BACKSLASH:\n      case KeyCode.CLOSE_SQUARE_BRACKET:\n        return true;\n\n      default:\n        return false;\n    }\n  }\n};\nexport default KeyCode;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/**\n * Wrap of sub component which need use as Button capacity (like Icon component).\n * This helps accessibility reader to tread as a interactive button to operation.\n */\n\n\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nvar inlineStyle = {\n  border: 0,\n  background: 'transparent',\n  padding: 0,\n  lineHeight: 'inherit',\n  display: 'inline-block'\n};\n\nvar TransButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TransButton, _React$Component);\n\n  function TransButton() {\n    var _this;\n\n    _classCallCheck(this, TransButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransButton).apply(this, arguments));\n\n    _this.onKeyDown = function (event) {\n      var keyCode = event.keyCode;\n\n      if (keyCode === KeyCode.ENTER) {\n        event.preventDefault();\n      }\n    };\n\n    _this.onKeyUp = function (event) {\n      var keyCode = event.keyCode;\n      var onClick = _this.props.onClick;\n\n      if (keyCode === KeyCode.ENTER && onClick) {\n        onClick();\n      }\n    };\n\n    _this.setRef = function (btn) {\n      _this.div = btn;\n    };\n\n    return _this;\n  }\n\n  _createClass(TransButton, [{\n    key: \"focus\",\n    value: function focus() {\n      if (this.div) {\n        this.div.focus();\n      }\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      if (this.div) {\n        this.div.blur();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          style = _a.style,\n          noStyle = _a.noStyle,\n          restProps = __rest(_a, [\"style\", \"noStyle\"]);\n\n      return React.createElement(\"div\", _extends({\n        role: \"button\",\n        tabIndex: 0,\n        ref: this.setRef\n      }, restProps, {\n        onKeyDown: this.onKeyDown,\n        onKeyUp: this.onKeyUp,\n        style: _extends(_extends({}, !noStyle ? inlineStyle : null), style)\n      }));\n    }\n  }]);\n\n  return TransButton;\n}(React.Component);\n\nexport default TransButton;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport classnames from 'classnames';\nimport ArrowLeftOutlined from '@ant-design/icons/ArrowLeftOutlined';\nimport ArrowRightOutlined from '@ant-design/icons/ArrowRightOutlined';\nimport { ConfigConsumer } from '../config-provider';\nimport Breadcrumb from '../breadcrumb';\nimport Avatar from '../avatar';\nimport TransButton from '../_util/transButton';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\n\nvar renderBack = function renderBack(prefixCls, backIcon, onBack) {\n  if (!backIcon || !onBack) {\n    return null;\n  }\n\n  return React.createElement(LocaleReceiver, {\n    componentName: \"PageHeader\"\n  }, function (_ref) {\n    var back = _ref.back;\n    return React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-back\")\n    }, React.createElement(TransButton, {\n      onClick: function onClick(e) {\n        if (onBack) {\n          onBack(e);\n        }\n      },\n      className: \"\".concat(prefixCls, \"-back-button\"),\n      \"aria-label\": back\n    }, backIcon));\n  });\n};\n\nvar renderBreadcrumb = function renderBreadcrumb(breadcrumb) {\n  return React.createElement(Breadcrumb, breadcrumb);\n};\n\nvar getBackIcon = function getBackIcon(props) {\n  var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ltr';\n\n  if (props.backIcon !== undefined) {\n    return props.backIcon;\n  }\n\n  return direction === 'rtl' ? React.createElement(ArrowRightOutlined, null) : React.createElement(ArrowLeftOutlined, null);\n};\n\nvar renderTitle = function renderTitle(prefixCls, props) {\n  var direction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'ltr';\n  var title = props.title,\n      avatar = props.avatar,\n      subTitle = props.subTitle,\n      tags = props.tags,\n      extra = props.extra,\n      onBack = props.onBack;\n  var headingPrefixCls = \"\".concat(prefixCls, \"-heading\");\n\n  if (title || subTitle || tags || extra) {\n    var backIcon = getBackIcon(props, direction);\n    var backIconDom = renderBack(prefixCls, backIcon, onBack);\n    return React.createElement(\"div\", {\n      className: headingPrefixCls\n    }, backIconDom, avatar && React.createElement(Avatar, avatar), title && React.createElement(\"span\", {\n      className: \"\".concat(headingPrefixCls, \"-title\")\n    }, title), subTitle && React.createElement(\"span\", {\n      className: \"\".concat(headingPrefixCls, \"-sub-title\")\n    }, subTitle), tags && React.createElement(\"span\", {\n      className: \"\".concat(headingPrefixCls, \"-tags\")\n    }, tags), extra && React.createElement(\"span\", {\n      className: \"\".concat(headingPrefixCls, \"-extra\")\n    }, extra));\n  }\n\n  return null;\n};\n\nvar renderFooter = function renderFooter(prefixCls, footer) {\n  if (footer) {\n    return React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-footer\")\n    }, footer);\n  }\n\n  return null;\n};\n\nvar renderChildren = function renderChildren(prefixCls, children) {\n  return React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-content\")\n  }, children);\n};\n\nvar PageHeader = function PageHeader(props) {\n  return React.createElement(ConfigConsumer, null, function (_ref2) {\n    var _classnames;\n\n    var getPrefixCls = _ref2.getPrefixCls,\n        pageHeader = _ref2.pageHeader,\n        direction = _ref2.direction;\n    var customizePrefixCls = props.prefixCls,\n        style = props.style,\n        footer = props.footer,\n        children = props.children,\n        breadcrumb = props.breadcrumb,\n        customizeClassName = props.className;\n    var ghost = true; // Use `ghost` from `props` or from `ConfigProvider` instead.\n\n    if ('ghost' in props) {\n      ghost = props.ghost;\n    } else if (pageHeader && 'ghost' in pageHeader) {\n      ghost = pageHeader.ghost;\n    }\n\n    var prefixCls = getPrefixCls('page-header', customizePrefixCls);\n    var breadcrumbDom = breadcrumb && breadcrumb.routes ? renderBreadcrumb(breadcrumb) : null;\n    var className = classnames(prefixCls, customizeClassName, (_classnames = {\n      'has-breadcrumb': breadcrumbDom,\n      'has-footer': footer\n    }, _defineProperty(_classnames, \"\".concat(prefixCls, \"-ghost\"), ghost), _defineProperty(_classnames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classnames));\n    return React.createElement(\"div\", {\n      className: className,\n      style: style\n    }, breadcrumbDom, renderTitle(prefixCls, props, direction), children && renderChildren(prefixCls, children), renderFooter(prefixCls, footer));\n  });\n};\n\nexport default PageHeader;"],"sourceRoot":""}
{"version":3,"sources":["modules/index.js"],"names":["RenderModules","props","config","modules","pageData","type","template","renderRow","tHtml","console","log","forEach","item","$","html","renderModules","moduleWrapper","_this","length","each","index","templateType","attr","init","window","Modules"],"mappings":";;AAAA;;AACA;;;;;;;;;;IACMA,a;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AACjB,SAAKC,MAAL,GAAc;AACZC,MAAAA,OAAO,EAAPA,eADY;AAEZC,MAAAA,QAAQ,EAAC,CACP;AAAEC,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,QAAQ,EAAE,UAAzB;AAAqCH,QAAAA,OAAO,EAAE,CAC5C,CAAC;AAAEE,UAAAA,IAAI,EAAE,KAAR;AAAeC,UAAAA,QAAQ,EAAE;AAAzB,SAAD,CAD4C;AAA9C,OADO,EAIP;AAAED,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,QAAQ,EAAE,aAAzB;AAAwCH,QAAAA,OAAO,EAAE,CAC/C,CAAC;AAAEE,UAAAA,IAAI,EAAE,KAAR;AAAeC,UAAAA,QAAQ,EAAE;AAAzB,SAAD,EAAsC;AAAED,UAAAA,IAAI,EAAE,KAAR;AAAeC,UAAAA,QAAQ,EAAE;AAAzB,SAAtC,CAD+C,EAE/C,CAAC;AAAED,UAAAA,IAAI,EAAE,KAAR;AAAeC,UAAAA,QAAQ,EAAE;AAAzB,SAAD,CAF+C;AAAjD,OAJO;AAFG,KAAd;AAYD;;;;2BACML,K,EAAO;AACZ,WAAKC,MAAL,CAAYE,QAAZ,GAAuBH,KAAK,CAACG,QAA7B;AACA,WAAKG,SAAL;AACD;;;gCACW;AACV,UAAIC,KAAK,GAAG,EAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,MAAjB;AACA,WAAKA,MAAL,CAAYE,QAAZ,CAAqBO,OAArB,CAA6B,UAACC,IAAD,EAAU;AACrCJ,QAAAA,KAAK,IAAI,qBAAII,IAAJ,CAAT;AACD,OAFD;AAGAC,MAAAA,CAAC,CAAC,MAAD,CAAD,CAAUC,IAAV,CAAeN,KAAf;AACA,WAAKO,aAAL;AACD;;;oCACe;AACd,UAAMC,aAAa,GAAGH,CAAC,CAAC,iBAAD,CAAvB;;AACA,UAAMI,KAAK,GAAG,IAAd;;AACAD,MAAAA,aAAa,CAACE,MAAd,IAAwBF,aAAa,CAACG,IAAd,CAAmB,UAACC,KAAD,EAAQR,IAAR,EAAiB;AAC1D,YAAMS,YAAY,GAAGR,CAAC,CAACD,IAAD,CAAD,CAAQU,IAAR,CAAa,eAAb,KAAiC,aAAtD;AACA,YAAMhB,QAAQ,GAAGW,KAAK,CAACf,MAAN,CAAaC,OAAb,CAAqBkB,YAArB,IAAqC,IAAIJ,KAAK,CAACf,MAAN,CAAaC,OAAb,CAAqBkB,YAArB,CAAJ,CAAuCR,CAAC,CAACD,IAAD,CAAxC,CAArC,GAAuF,IAAIK,KAAK,CAACf,MAAN,CAAaC,OAAb,CAAqB,OAArB,CAAJ,CAAkCU,CAAC,CAACD,IAAD,CAAnC,CAAxG;AACAN,QAAAA,QAAQ,CAACiB,IAAT;AACD,OAJuB,CAAxB;AAKD;;;;;;AAEHC,MAAM,CAACC,OAAP,GAAiB,IAAIzB,aAAJ,EAAjB","sourcesContent":["import modules from './tpl';\nimport row from './tpl/row.art';\nclass RenderModules {\n  constructor(props) {\n    this.config = {\n      modules,\n      pageData:[\n        { type: 'row', template: 'row-full', modules: [\n          [{ type: 'mod', template: 'Header' }]\n        ] },\n        { type: 'row', template: 'row-600-300', modules: [\n          [{ type: 'mod', template: 'Banner' }, { type: 'mod', template: 'InfoFlow' }], \n          [{ type: 'mod', template: 'TextList' }]\n        ] },\n      ]\n    }\n  }\n  render(props) {\n    this.config.pageData = props.pageData;\n    this.renderRow();\n  }\n  renderRow() {\n    let tHtml = '';\n    console.log(this.config);\n    this.config.pageData.forEach((item) => {\n      tHtml += row(item);\n    })\n    $('#app').html(tHtml);\n    this.renderModules();\n  }\n  renderModules() {\n    const moduleWrapper = $('.module-wrapper');\n    const _this = this;\n    moduleWrapper.length && moduleWrapper.each((index, item) => {\n      const templateType = $(item).attr('template-type') || 'no-template';\n      const template = _this.config.modules[templateType] ? new _this.config.modules[templateType]($(item)) : new _this.config.modules['NoTpl']($(item));\n      template.init();\n    });\n  }\n}\nwindow.Modules = new RenderModules();"],"file":"index.js"}